<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>HTML on Victor&#39;s Blog</title>
        <link>https://victorchao996.github.io/tags/html/</link>
        <description>Recent content in HTML on Victor&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 05 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://victorchao996.github.io/tags/html/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>第七周-購買 Udemy Bootcamp 課程</title>
        <link>https://victorchao996.github.io/p/frontend_learning-7th-week/</link>
        <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-7th-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-7th-week/JavaScript.jpg" alt="Featured image of post 第七周-購買 Udemy Bootcamp 課程" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;相隔了兩個星期，終於又發布這個系列文章了😅。眼看當初設立的每周挑戰變得可有可無，我趕緊來補一下最新的進度。&lt;/p&gt;
&lt;p&gt;上週農曆新年因為電腦不在身邊於是也就沒有任何學習。直到本周因為受不了如此沒有系統化的學習，再加上帳號頭一次購買有推出優惠，於是果斷購買了Udemy的線上課程。雖然為入門課程(Bootcamp)但是課程單元的數量可一點都不馬虎，兩門總計都為64小時的Web課程要全部花完也要花上不少時間。以下是主要學習的內容。&lt;/p&gt;
&lt;h2 id=&#34;主要學習實作項目&#34;&gt;主要學習&amp;amp;實作項目&lt;/h2&gt;
&lt;p&gt;已經有相關基礎的部分直接開兩倍速快速聽過，而簡單介紹屬性的單元就把練習題目做完便速速前往下一個單元。&lt;/p&gt;
&lt;h3 id=&#34;web開發概念&#34;&gt;web開發概念&lt;/h3&gt;
&lt;p&gt;在學習web 開發之前需要的各種基礎觀念:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;網路是什麼?&lt;/li&gt;
&lt;li&gt;前後端的是什麼?&lt;/li&gt;
&lt;li&gt;瀏覽器的作用?&lt;/li&gt;
&lt;li&gt;HTML/CSS/JS 分別扮演什麼樣的角色?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;html&#34;&gt;HTML&lt;/h3&gt;
&lt;p&gt;迅速看過，並做一點練習題目，至於table的部分我完全放掉，我認為以下幾點是學習HTML相對比較重要的內容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic&lt;/li&gt;
&lt;li&gt;HTML semantic&lt;/li&gt;
&lt;li&gt;HTML form&lt;/li&gt;
&lt;li&gt;form validation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;css&#34;&gt;CSS&lt;/h3&gt;
&lt;p&gt;CSS的部分就是快速複習基礎觀念與屬性，主要的學習策略為多聽多看。雖說進階的部分現階段不是很熟，但我想至少要在實作的當下知道在MDN要搜索哪個關鍵字才好。至於BootStrap我沒有太深入去研究，只是稍微玩一下，等到需要使用的時候再續翻閱文件就好。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;basic&lt;/li&gt;
&lt;li&gt;selector&lt;/li&gt;
&lt;li&gt;container
&lt;ul&gt;
&lt;li&gt;div(block)&lt;/li&gt;
&lt;li&gt;span(inline)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;display
&lt;ul&gt;
&lt;li&gt;block&lt;/li&gt;
&lt;li&gt;inline&lt;/li&gt;
&lt;li&gt;inline-block&lt;/li&gt;
&lt;li&gt;none&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;box-model: content, padding, border, margin&lt;/li&gt;
&lt;li&gt;box-sizing
&lt;ul&gt;
&lt;li&gt;content-box&lt;/li&gt;
&lt;li&gt;border-box&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;position:
&lt;ul&gt;
&lt;li&gt;fixed&lt;/li&gt;
&lt;li&gt;absolute&lt;/li&gt;
&lt;li&gt;relative&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;transform
&lt;ul&gt;
&lt;li&gt;translate&lt;/li&gt;
&lt;li&gt;rotate&lt;/li&gt;
&lt;li&gt;skew&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flexbox&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;main axis/cross axis 的觀念&lt;/li&gt;
&lt;li&gt;flex-direction&lt;/li&gt;
&lt;li&gt;justify-content&lt;/li&gt;
&lt;li&gt;align-item&lt;/li&gt;
&lt;li&gt;align-self&lt;/li&gt;
&lt;li&gt;wrap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RWD&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;media query&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS framework: Bootstrap&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;flexbox的部分老是看過就忘，名字真的傻傻分不清楚，找機會再做一個類似&lt;a class=&#34;link&#34; href=&#34;https://flexbox.help/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;display: flex (flexbox.help)&lt;/a&gt;的頁面來加深自己的印象好了。&lt;/p&gt;
&lt;h3 id=&#34;terminal-cli&#34;&gt;Terminal (CLI)&lt;/h3&gt;
&lt;p&gt;一些跟file處理相關的指令，先前就有藉由terminal來輸入git指令的經驗，這部分還算得心應手。稍微整理了一下比較就跳到下一個單元去了。&lt;a class=&#34;link&#34; href=&#34;https://victorchao996.gitbook.io/personal-notes/jie-shao-an-zhuang-zhi-ling/command-line-chang-yong-zhi-ling&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;command Line 常用指令 - Victor&amp;rsquo;s 程式開發筆記 (gitbook.io)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;nodejs&#34;&gt;Node.js&lt;/h3&gt;
&lt;p&gt;雖然這是前端挑戰系列，但是全端網頁課程怎麼能沒有後端的部分呢? 以下是主要學習的內容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node是什麼?&lt;/li&gt;
&lt;li&gt;node REPL&lt;/li&gt;
&lt;li&gt;node JS runtime 與 brower的差異&lt;/li&gt;
&lt;li&gt;範例 node 內建模組API : File System, HTTP&lt;/li&gt;
&lt;li&gt;npm(node package manager)&lt;/li&gt;
&lt;li&gt;node_modules 觀念&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;跟者課程的練習時做了一個簡單的node程式&lt;a class=&#34;link&#34; href=&#34;https://github.com/VictorChao996/weird-language-guesser&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;weird-language-guesser&lt;/a&gt;，順便練習npm install &amp;amp; import的動作(&lt;del&gt;雖然功能有點失敗就是了&lt;/del&gt;)&lt;/p&gt;
&lt;h3 id=&#34;express&#34;&gt;Express&lt;/h3&gt;
&lt;p&gt;若要使用node當作後端的server，通常不會使用內建HTTP module，而是使用npm上的package: Express。目前看了一半的內容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;啟用server listen for requests&lt;/li&gt;
&lt;li&gt;根據request 送出相對應的 response&lt;/li&gt;
&lt;li&gt;routing 概念
目前還沒看到EJS的部分，但是看完node.js 與 express 的部分影片讓我對於後端有更深的認識。在這過程中有更加了解瀏覽器送出請求後會發生什麼事，&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mongodb&#34;&gt;mongoDB&lt;/h3&gt;
&lt;p&gt;這一part主要學習的內容是資料庫的觀念，並稍微玩一下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL vs NoSQL&lt;/li&gt;
&lt;li&gt;安裝mongoDB&lt;/li&gt;
&lt;li&gt;下載並使用MongoDB shell&lt;/li&gt;
&lt;li&gt;藉由MongoDB Shell 達到CRUD&lt;/li&gt;
&lt;li&gt;更多的工具: &lt;a class=&#34;link&#34; href=&#34;https://mongoosejs.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mongoose ODM v6.9.1 (mongoosejs.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;光是安裝的部分就花了不少時間QQ。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;這一周也挺瘋狂的，接觸了不少新的觀念，尤其是學習Node真的打開了我的眼界。node解放了JS，使其能在瀏覽器以外的地方運行。另外node內建各種module能讓developer使用，再加上npm的出現，讓開發各種project變得更為容易，這現象從觀察 npm 前幾名package的weekly downloads 能略知一二。這周挑戰文章就先這樣，ㄅㄅ。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
