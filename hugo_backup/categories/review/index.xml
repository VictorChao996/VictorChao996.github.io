<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Review 回顧 on Victor&#39;s Blog</title>
        <link>https://victorchao996.github.io/categories/review/</link>
        <description>Recent content in Review 回顧 on Victor&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 27 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://victorchao996.github.io/categories/review/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>AppWorks School Campus Program Batch 3 畢業心得</title>
        <link>https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/</link>
        <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation.jpg" alt="Featured image of post AppWorks School Campus Program Batch 3 畢業心得" /&gt;&lt;blockquote&gt;
&lt;p&gt;此篇文章同步發表於 medium 上，所以整篇文章的語氣會比較像是對他人講話。 文章連結: &lt;a class=&#34;link&#34; href=&#34;https://medium.com/@96094victor/appworks-school-campus-program-3-%E7%B5%90%E6%A5%AD%E5%BF%83%E5%BE%97-e4ccf85247b8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://medium.com/@96094victor/appworks-school-campus-program-3-%E7%B5%90%E6%A5%AD%E5%BF%83%E5%BE%97-e4ccf85247b8&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;大家好，我是 AppWorks School Campus Program #3 的學員 Victor 趙冠霖, 畢業於國立中央大學資訊工程學系，職涯初期希望朝 &lt;strong&gt;QA Engineer 或 後端&lt;/strong&gt;的方向努力，目前在等當兵中😅。很榮幸能在這邊與各位讀者分享我在 AppWorks School(以下簡稱 School) 的所學與一些小小的心得。&lt;/p&gt;
&lt;p&gt;這篇文章主要分享我個人的一些所見所得，關於 AppWorks School 的簡介就不多提，重點主要會放在自身的經驗上，希望對有興趣報名 Campus Program #4 的同學們有一點幫助。&lt;/p&gt;
&lt;p&gt;以下是整篇心得文的大鋼，趕時間的讀者們可以挑自己想看的內容進行閱讀:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;報名動機&lt;/li&gt;
&lt;li&gt;報名 &amp;amp; 面談準備&lt;/li&gt;
&lt;li&gt;School 的學習資源&lt;/li&gt;
&lt;li&gt;School 的學習過程&lt;/li&gt;
&lt;li&gt;在大學學習與 School 學習的差異&lt;/li&gt;
&lt;li&gt;感想&amp;amp;總結&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;報名動機&#34;&gt;報名動機&lt;/h2&gt;
&lt;p&gt;時間點是在大四上學期，那時正好處在一個低潮，平時成績太差，連自己學校的推甄都備取不上😢，那時也不打算繼續考研究所。就在我無比焦慮的情況下，AppWorks School 的廣告突然出現在我的視野中 (忘記是臉書廣告還是 Podcast 了)，在因緣巧合之下就報名了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;報名面談準備&#34;&gt;報名&amp;amp;面談準備&lt;/h2&gt;
&lt;p&gt;事前準備&amp;amp;面談的詳細過程我都寫在這篇文章裡了 &lt;a class=&#34;link&#34; href=&#34;http://victorchao966.me/p/interviewrecord_appworks_school_campus_program/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;面試趣-AppWorks School校園培訓計畫 (victorchao966.me)&lt;/a&gt;。因為比較偏個人的紀錄，我就不再這邊贅述，感興趣的讀者可以點進去看看。我覺得這個階段不外乎就是以下幾個重點。&lt;/p&gt;
&lt;h3 id=&#34;展現你的熱忱動機&#34;&gt;展現你的熱忱(動機)&lt;/h3&gt;
&lt;p&gt;首先最重要的是向 School 這邊展示你的動機，具體要怎麼做有很多種方式。最簡單&amp;amp;基本的方式大概就是好好的填申請表單，申請表單上有滿多個人引導式的問題值得你去發揮。一般人可能就隨便填一填，讀者可利用這些問題好好的說明你為何會想要了解軟體產業。&lt;strong&gt;你對於自己的想法&amp;amp;行動愈明確，你愈有機會被錄取&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;證明你的努力&#34;&gt;證明你的努力&lt;/h3&gt;
&lt;p&gt;除了展現熱忱外，第二點也頗為重要，&lt;strong&gt;你要證明你的熱忱不是空穴來風&lt;/strong&gt;。可以在報名表單上說明你參與的課外活動，例如: 社團、實習、競賽或跟參展等，這些實際行動絕對比&amp;quot;我對軟體開發有興趣&amp;quot;這幾個字還來的有力。&lt;/p&gt;
&lt;p&gt;除了文字說明以外，表單上也要求報名的人附上其他的連結，如: &lt;strong&gt;公開履歷、GitHub帳號、自我介紹影片&lt;/strong&gt;等都是能好好善加利用的。&lt;/p&gt;
&lt;h3 id=&#34;你不需要名校出生你不需要是個強者&#34;&gt;你不需要名校出生，你不需要是個強者&lt;/h3&gt;
&lt;p&gt;有許多人可能會認為說自己是不是要非常厲害才能報名，但其實不需要。老實說在報名的當下我對前後端一點概念都沒有，也沒用 HTML CSS JS 寫過網站，完全就是一個新手小白。我覺得只要對程式開發有一點概念，並且有足夠的動機&amp;amp;意願每周投入 &lt;strong&gt;30~40 小時&lt;/strong&gt;的時間，錄取的機會還是很大的。&lt;/p&gt;
&lt;p&gt;若讀者本身不是資訊相關科系也不用感到灰心，你比本科系的人有更多的故事可以說，例: &lt;em&gt;為什麼要輔系? 你怎麼接觸到寫程式的? 為什麼對軟體開發有興趣?&lt;/em&gt; 好好利用你自己的&lt;strong&gt;不平等優勢&lt;/strong&gt;，來說一個好的故事吧!&lt;/p&gt;
&lt;p&gt;最後再說說關於名校迷思，你不需要是個頂大才有資格，無論你是國立大學、私立大學、科技大學都能報名。還是一樣的話，&lt;strong&gt;做足上面兩點，你比任何人都有優勢&lt;/strong&gt;。這邊要跟各位想報名的讀者說，因為 Campus Program 是免費的，所以 School 會盡量選擇能幫助到的學員，確保資源能被有效的利用。(強烈建議要參加前好好評估自身的負荷量，包含學期間的修課、外務等，才不會浪費這麼優秀的資源喔~)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;school-的學習資源&#34;&gt;School 的學習資源&lt;/h2&gt;
&lt;p&gt;在進到下一個 part 講學習過程之前先給各位讀者介紹 School 這邊能提供給 Campus Program 學員的資源，我們這一屆的配置(台北班)如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;舒適的學習環境: 27吋螢幕(外接) + 電腦椅&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;具有實務經驗的導師 * 3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;認真負責的校務夥伴 * 2&lt;/li&gt;
&lt;li&gt;與你一同奮鬥的學員們 * N&lt;/li&gt;
&lt;li&gt;各式工作坊 &amp;amp; 企業訪談等活動&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Campus Program 學員的位置會在8樓大空間，旁邊就是 School 校務的工作空間，不時會聽到他們的閒聊&amp;amp;笑聲，整體氛圍還滿歡樂的。校務也有跟我們透露，比起8樓歡樂的氣氛，轉職班待的9樓相對嚴肅很多(畢竟每天壓力很大而且沒有退路)。另外，如果你是需要專注寫code的人，我會建議坐靠近投影幕並且面向窗戶的位置，因為空間配置的關係，時常會有校務人員走來走去(旁邊剛好就是小間的會議室)，背對可能會稍微好一點 XD。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/environment.jpg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/environment_hudf159842498a2f72595464a5ecd7e454_3497012_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/environment_hudf159842498a2f72595464a5ecd7e454_3497012_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Campus Program 8樓共同空間&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;school-學習過程&#34;&gt;School 學習過程&lt;/h2&gt;
&lt;p&gt;學習過程總共16周，採用的是翻轉式教學，並分為好幾個階段。不過每一屆學程都會稍作調整，在這邊以我的視角分享 Campus Program #3 的學習內容。&lt;/p&gt;
&lt;h3 id=&#34;遠距學習階段3周&#34;&gt;遠距學習階段(3周)&lt;/h3&gt;
&lt;p&gt;遠距學習的3周主要是讓學員們使用&lt;a class=&#34;link&#34; href=&#34;https://teamtreehouse.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Learn to Code Online | Treehouse (teamtreehouse.com)&lt;/a&gt; 自學一些關於前後端的基礎，這個網站是訂閱制，付費之後就可以觀看所有的教學內容。School 這邊會推薦一系列跟前後端相關的影片讓學員們學習。除了學習外，每周都會有指定的作業，作業內容包含設置好 AWS 相關服務 &amp;amp; JS 的練習。當時的我沒有碰過雲端服務，所以在設置上花了不少時間。這三周大致上的實作練習有。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;設置 AWS 相關服務 (EC2、RDS)&lt;/li&gt;
&lt;li&gt;創建 GitHub Repo、建立 branch、發PR&lt;/li&gt;
&lt;li&gt;使用 Express.js 建立後端服務&lt;/li&gt;
&lt;li&gt;使用 React.js 建立前端服務&lt;/li&gt;
&lt;li&gt;將前後端服務部屬到 EC2 上&lt;/li&gt;
&lt;li&gt;使用 Nginx 整合前後端服務&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在這個階段中除了 Git 的使用外，幾乎所有的學習項目我都沒有碰過，所以每天都花了大量的時間學習&amp;amp;研究這些 &amp;ldquo;新技術&amp;rdquo;。另外，在這個階段 School 有著淘汰的機制，做不出來的學員會被請回家。事後回想這機制也挺合理的，如果連 AWS 都設置不起來，後面每個階段都沒辦法做下去。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這個階段最後的成品: 一個可以登入的簡單網站&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;個人指定練習專案55周&#34;&gt;個人指定練習專案(5.5周)&lt;/h3&gt;
&lt;p&gt;前3周&amp;quot;暖身&amp;quot;結束，開始要來點真的。在這個階段，學員會被要求實作一個名為 STYLiSH 的電商網站，導師會提供每周必須要完成的進度，前3周為後端，後2.5周為前端。每周進度中會提供的內容為當周要完成的 &lt;strong&gt;功能說明 &amp;amp; API SPEC&lt;/strong&gt;。當學員依據要求完成當周的進度之後會在 GitHub 上發 PR，導師會上去 code review。另外，從這個階段開始，學員會被要求駐點(共同時段要出現)，而&lt;strong&gt;共同時段會由導師帶領大家進行每周的 recap(回顧)，讓學員們可以互相分享學習的內容。&lt;/strong&gt;
這個階段主要的學習&amp;amp;實作內容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git flow&lt;/li&gt;
&lt;li&gt;建立 DB &amp;amp; DB table&lt;/li&gt;
&lt;li&gt;SQL 語法 &amp;amp; 資料庫正規化&lt;/li&gt;
&lt;li&gt;開後端 API &amp;amp; 寫 API doc(swagger)&lt;/li&gt;
&lt;li&gt;登入登出(JWT token)、串金流&lt;/li&gt;
&lt;li&gt;CICD (docker、GitHub Actions)&lt;/li&gt;
&lt;li&gt;React 前端頁面 (SPA、RWD)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完成這個階段後學員們會對前後端有更進一步的認識，除此之外，還會接觸許多&amp;quot;寫程式&amp;quot;以外的事情。(CICD、撰寫 API doc &amp;amp; 使用 API 測試工具、發PR等)&lt;/p&gt;
&lt;h3 id=&#34;extend-project-co-work-黑客松15周&#34;&gt;Extend Project Co-work 黑客松(1.5周)&lt;/h3&gt;
&lt;p&gt;在這個階段中，School 會將學員們分成好幾組，每組3~4人進行活動。活動內容為: &lt;strong&gt;由導師提供的 STYLISH 的 sample 專案下去做新功能的開發。&lt;/strong&gt; 導師會提供一個新功能表單，其中功能分為 簡單、中等、困難 三種，&lt;strong&gt;並且要求每種難度中至少挑一個功能來實現&lt;/strong&gt;。第一周結束後要小組功能說明，第二周要上台 DEMO。&lt;/p&gt;
&lt;p&gt;在這個階段有挑戰的地方有幾項:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;與不熟悉的學員合作(School 這邊會刻意拆散)&lt;/li&gt;
&lt;li&gt;要看懂 sample code (前端那邊的撰寫邏輯差滿多的)&lt;/li&gt;
&lt;li&gt;選擇適當的功能下去開發 (挑有把握的，時間不太夠)&lt;/li&gt;
&lt;li&gt;如何團隊協作 (專案進度掌控、code 規範 全部都自己來)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們這組選擇實作的功能為: Excel 批次上傳商品資訊(簡易)、Line 商品上架通知(中等)、使用 websocket 實作線上客服(困難)。其他組別也做了一些有趣的額外功能，例如: &lt;strong&gt;爬蟲做商品比價、限時動態、加密貨幣付款&lt;/strong&gt;等等。我覺得這兩周滿有趣的，可以看到許多大神大顯神功 XD。&lt;/p&gt;
&lt;p&gt;在這邊特別感謝我的兩個神隊友: Erin &amp;amp; Michelle，兼顧學業外還抽出許多時間弄黑客松的開發(聽說熬夜到5點?)，辛苦兩位了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/hackathon1.jpg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/hackathon1_hub2ba79ae2c89865ab0c82799ecbfb494_4346106_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/hackathon1_hub2ba79ae2c89865ab0c82799ecbfb494_4346106_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;兩位隊友: Erin &amp; Michelle&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;
&lt;img src=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/hackathon2.jpg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/hackathon2_hu448e8a05e1ddcc29786ccd03f95cf906_3732953_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/hackathon2_hu448e8a05e1ddcc29786ccd03f95cf906_3732953_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;來點頭腦風暴&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;practical-exercises-實務練習2周&#34;&gt;Practical Exercises 實務練習(2周)&lt;/h3&gt;
&lt;p&gt;在這個階段中，學員會被分為兩組開發團隊，並分為四種不同的職位(角色)，並根據PM事先準備好的專案PRD(Product Requirement Document 產品需求規格書 )下去做開發。&lt;/p&gt;
&lt;h4 id=&#34;開發過程理想的最終結果&#34;&gt;開發過程&amp;amp;理想的最終結果&lt;/h4&gt;
&lt;p&gt;以下是導師規劃的流程階段:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kick off:&lt;/li&gt;
&lt;li&gt;Design Review:&lt;/li&gt;
&lt;li&gt;開發/測試階段:&lt;/li&gt;
&lt;li&gt;驗收階段
更多細節可以參考下方這張圖:
![[Pasted image 20230625141104.png]]
其中開發團隊內被分為四種職位，下方是各個角色與其對應的職責:&lt;/li&gt;
&lt;li&gt;Frontend(2位): 完成頁面開發並挑戰複雜的體驗效果&lt;/li&gt;
&lt;li&gt;Backend(3位): 完成 API 相關開發並設法增進效能&lt;/li&gt;
&lt;li&gt;QA/SDET(2位): 能規劃與透過嚴謹的測試讓開發團隊正確地交付需求&lt;/li&gt;
&lt;li&gt;SRE(2位): 能確保服務正常運行，並再出問題時第一時間感知
理想上的成果為以下幾個:&lt;/li&gt;
&lt;li&gt;完成兩個服務(前台抽獎頁面、後台活動系統頁面)&lt;/li&gt;
&lt;li&gt;一份對應需求的技術文件&lt;/li&gt;
&lt;li&gt;建構 SIT 與 STAGE 環境&lt;/li&gt;
&lt;li&gt;自動化測試流程 &amp;amp; CICD 部屬&lt;/li&gt;
&lt;li&gt;實時監控系統與 Discord 告警機制&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;實際上的結果&#34;&gt;實際上的結果&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;理想很豐滿，現實很骨感&lt;/strong&gt;這句話可不是說說而已，要學員們在兩周內完美的照著上面的流程走幾乎不可能。我整理幾個我認為我們這組最後失敗(或者說沒有按時間完成要求)的原因:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;對該職位的職責&amp;amp;技術不熟悉(尤其 QA/SDET &amp;amp; SRE)&lt;/li&gt;
&lt;li&gt;開會時間喬不容、會議沒效率&lt;/li&gt;
&lt;li&gt;大家不清楚自身職位以外的開發進度&amp;amp;職責&lt;/li&gt;
&lt;li&gt;團隊士氣低弱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其實在這個階段下不少學員壓力都很大，尤其身兼學業或其他外務的人會很明顯的忙不過來。再加上當時跟我同為 QA 的學員離開了，事情突然增加，導致我心態有點小崩。偏偏跟我一組的都是大忙人，團隊亂成一鍋粥的情況下，就會產生我是誰? 我在哪? 我現在在幹嘛? 的錯覺。&lt;/p&gt;
&lt;h4 id=&#34;自我檢討&#34;&gt;自我檢討&lt;/h4&gt;
&lt;p&gt;我選擇的角色是 QA/SDET ，這個角色的職責大概有以下幾點:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;承擔因服務開發上的 BUG 造成實際業務損失責任&lt;/li&gt;
&lt;li&gt;在 SIT 環境建構 後端自動化測試 並在後端 CICD 部屬後接續執行&lt;/li&gt;
&lt;li&gt;使用 K6 在 STAGE 環境建構 抽獎流程相關 API 自動化負載測試並定義 RPS 通過標準&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我認為我在這個階段中最可惜的一件事情就是沒有盡到 QA(Quality Assurance)的職責。&lt;strong&gt;軟體品質的價值不僅僅是只能建立在測試的工作上，有經驗的 QA 能在開發階段的早期，也就是 design review 的時候就指出可能會有問題的地方。&lt;/strong&gt; 我舉個例子，當團隊內的技術文件出來的時，我有適當的指出 API response data 的缺漏。而在 response data 沒問題的情況下我就去撰寫本地的 API test 了，而我犯的最大的錯誤就是沒有真正的釐清開發需求，不了解為何會開出這樣的 API 。於是乎結果就是直到 DEMO 前的最後幾個小時後端 API 都還在更改，後端也很誠實地跟我表示他們沒 run 本地 API test 就發PR了。(那我在幹嘛?)
我甚至聽到前端對後端說: &amp;ldquo;ㄟ為什麼 API是這樣開?&amp;rdquo; 😂😂😂，總之就是相當壯烈就是了。&lt;/p&gt;
&lt;p&gt;至於 SDET 的部分，我應該早點嘗試後端自動化測試這件事。對 GitHub Actions 不是特別孰悉，再加上這些環境是需要藉由 VPN 才能連上，最終沒有成功把自動化的流程建立起來。而負載測試的部分則是 SRE 那邊 Grafana dashboard 尚未建立起來，所以寫好的 K6 程式也只能躺在那邊。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API test 可以參考這個 repo: &lt;a class=&#34;link&#34; href=&#34;https://github.com/VictorChao996/SIT-API-test&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VictorChao996/SIT-API-test: 嘗試從外部測試 SIT 環境的 API ?? (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;K6 負載測試: &lt;a class=&#34;link&#34; href=&#34;https://github.com/VictorChao996/K6-load-testing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VictorChao996/K6-load-testing: backend up k6 testing file. (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在這個階段中我最大的收穫就是&lt;strong&gt;團隊開發上遇到的困難帶給我的震撼&lt;/strong&gt;，團隊沒有好的開發規範&amp;amp;磨合的話在開發上會異常的困難，也會間接導致其他的負面效果。如何的確保團隊正常的運作下去真的是高深的學問，經過此次學習，我終於明白為何公司會如此強調企業文化，好的開發團隊也注重建立團隊的氣氛&amp;amp;正確的開發文化。&lt;/p&gt;
&lt;h3 id=&#34;personal-project-個人專案31周&#34;&gt;Personal Project 個人專案(3+1周)&lt;/h3&gt;
&lt;p&gt;到了這邊就是最後一個階段喇，School 會帶著各位學員進行個人專案的發想。而這幾周也有各自的驗收(personal project proposal、Sprint 1~3)，題目不限，想做什麼都可以。不過導師這邊會提供各種意見(&lt;del&gt;施壓&lt;/del&gt;)，並追蹤學員們的開發狀況，確保最終成品具備一個完整度。(至少不要有作業感)&lt;/p&gt;
&lt;p&gt;在這個階段壓力稍微比較小一點，因為可以照著自己的步調下去開發，合理的安排自己的時間。我覺得這幾周主要的學習重點為:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;資料收集&lt;/li&gt;
&lt;li&gt;時程規劃&lt;/li&gt;
&lt;li&gt;上台 DEMO 的能力
現在回想當時 sprint 2 時的 DEMO 就各種尷尬，上台前沒有準備的後果就是講得很爛，台下的學員也是一臉: 蛤? 這就結束了的表情? 導師也校務們也不斷的強調說，在 DEMO時候可以把大家當網站的使用者一樣帶著大家一步步的使用自己的網站。但要在短短的3分鐘內做好這件事真的不太容易。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我最後做的成品是一個可以使用 markdown語法 撰寫履歷的網站 &lt;a class=&#34;link&#34; href=&#34;https://github.com/VictorChao996/markdown_resume_maker&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VictorChao996/markdown_resume_maker: Appworks School Personal Project : Markup And Down (github.com)&lt;/a&gt; ，老實說可以改善的點不少，例如: 前端網頁效能、自訂模板、RWD等，但至少以一個開發3周的作品來說還算完整? 感興趣的讀者可以上
去玩玩看。其他學員也做很多滿有趣的作品，例: leetcode刷題群組、宅宅追星網站(爬蟲彙整偶像的資料)、&lt;a class=&#34;link&#34; href=&#34;[Lensfinder]%28https://lensfinder.vercel.app/%29&#34; &gt;Lensfinder(相片膠段分析&amp;amp;鏡頭推薦網)&lt;/a&gt;等。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;大學學習與-school-學習的差異&#34;&gt;大學學習與 School 學習的差異&lt;/h2&gt;
&lt;p&gt;以下列出幾點我覺得跟大學學習很不相同的地方，以及為何你應該要選擇 School。&lt;/p&gt;
&lt;h3 id=&#34;翻轉式教學&#34;&gt;翻轉式教學&lt;/h3&gt;
&lt;p&gt;兩者最大的不同為 School 這邊採用翻轉式教學，在這邊不會有老師在講台上授課，課堂主要的目的是討論與參與，而學員就根據導師的要求進行實作&amp;amp;練習。 那可能這時有人會有許多疑問: 這樣學習效果好嗎? 難道翻轉式教學不會翻車嗎? 我大學的課堂有搞過翻轉式教學，但效果很差，你們這邊不會有這樣的問題嗎?&lt;/p&gt;
&lt;p&gt;如果讀者有過翻車的經驗，那我可以保證 School 不會出現類似的情況，因為這邊有學校沒有的(或至少我的學校沒有的😂)兩個重要因素。&lt;/p&gt;
&lt;h3 id=&#34;具有實務經驗的導師&#34;&gt;具有實務經驗的導師&lt;/h3&gt;
&lt;p&gt;有實務開發經驗的導師真的很重要，台灣的教授們，尤其是公立學校，大部分都是博士班畢業後就直接朝著教授的路發展。在這幾十年中都在做研究，理論方面他可能很熟悉，但是沒有任何實務開發的經驗，所以開的課程只能偏理論方面的。教授們不了解實務開發上會遇到的問題，或者說沒有&amp;quot;親身體驗&amp;quot;過職場上會遇到的種種狀況，也就沒辦法設計出好的翻轉式教學。&lt;/p&gt;
&lt;p&gt;School 這邊不同，導師都是具有業界經驗的(甚至有的還在職)，對於菜鳥會遇到的問題多少心裡有數，因為導師們也當過新人，踩過的坑比學員們多的多。另外一點很不同的是，在 School 如果課外有遇到任何問題隨時都可以詢問導師，例: 職涯規劃、職場八卦、履歷健檢等，導師們都很樂於為學員們解答；反觀學校教授，課堂以外的時間基本上見不到 XD。&lt;/p&gt;
&lt;h3 id=&#34;認真的同學們&#34;&gt;認真的同學們&lt;/h3&gt;
&lt;p&gt;翻轉式教學不乏會將同學們分成小組進行團體活動，相信大多數人都遇過小組成員會擺爛的鳥事，我們對於這樣的人無能為力，畢竟這對他們來說這只是眾多課程中的一門。然而在 School 比較不會有這樣的問題，參加 Campus Program 的學員都是有一定的動機跟對未來的嚮往才會來報名學程，經過 School 篩選後留下來的學員都是足夠優秀的同學(或至少心態上正確)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要比喻那種感覺的話有點像是學習型社團，只不過強度大概是 5 倍以上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;感想總結&#34;&gt;感想&amp;amp;總結&lt;/h2&gt;
&lt;h3 id=&#34;可惜的地方&#34;&gt;可惜的地方&lt;/h3&gt;
&lt;p&gt;我覺得整個學習過程比較可惜的地方是活動安排的比較緊湊，有種上個階段還沒有忙完又要趕著前往下一個階段的感覺，如果時程的稍為寬鬆(或至少不要重疊)學員的壓力會比較小。另外還有一點比較可惜的是，因為是學期班的關係，只能在共同時段見到大家，在有團隊合作的階段還是大家面對面討論效果會更佳。&lt;/p&gt;
&lt;h3 id=&#34;學習與成長&#34;&gt;學習與成長&lt;/h3&gt;
&lt;p&gt;在 School 學習過程中真的很紮實(沒在騙XD)，直接用最粗暴的方法把我從生活中的低潮給拉出來(事情都做不完了，哪有時間 emo)。雖然每一週都很辛苦，壓力頗大，不過我也在實作的過程中獲得不少成就感，現在往回看真的覺得當初有報名真的是太好了。我得到很多系上不會接觸到的學習經驗，讓我能在進入職場前，一窺軟體工程師的日常。&lt;/p&gt;
&lt;h3 id=&#34;致謝&#34;&gt;致謝&lt;/h3&gt;
&lt;p&gt;感謝辛苦的導師(Frank、Addie、John)要帶我們這群連 junior 工程師都不是的學員，時常看到導師半夜2.3點在發公告，還要 review 我們發的 PR，關心學員的學習狀況等。&lt;/p&gt;
&lt;p&gt;特別感謝導師 Frank 在實務練習階段心態比較崩得時候給我的鼓勵，並告訴我說其實在開發團隊建立初期特別容易遇到磨合的問題，&lt;strong&gt;吵架不合推卸責任、文件沒有歸納到處亂飛、沒人會做乾脆不做等問題比比皆是&lt;/strong&gt;。身為其中一個角色能做的也只有盡力主動跨領域協調，用自己的方式設法讓整體開發能順利進行。無論公司大小都會遇到類似的問題，能在現在這個階段就接觸並體驗倒是滿難得的。總之特別感謝 Frank 抽空關心我，你的鼓勵對我有很大的幫助!&lt;/p&gt;
&lt;p&gt;特別感謝 Addie 幫我從指令歷史紀錄中找回設置環境變數的方法，在STYLiSH階段無意間把環境變數給抹掉，導致連 &lt;code&gt;ls -al&lt;/code&gt; 都沒用，拆點就要把 EC2 instance 給砍掉重來了。&lt;/p&gt;
&lt;p&gt;感謝其他校務夥伴(Carolyn、Luna、Tiffany)幫忙安排各種活動(各式工作坊、修改履歷、企業參訪等)，還要順道關心各位學完的身心健康，你們是最堅強的後盾。&lt;/p&gt;
&lt;p&gt;感謝其他 Campus Program #3 的學員，讓我暫時脫離邊緣人的生活，與你們互動真的很有趣! 在成長的路上有一群夥伴真的很難得，很高興大家完成了這段旅程，相信以後都能在軟體業看到各位的身影👍。&lt;/p&gt;
&lt;p&gt;最後特別感謝 AppWorks School ，謝謝你們給我這個機會讓我可以接觸到這麼多有趣的事情，學習到一點點的技術，認識了一群可愛的人。我很珍惜這次的相遇，特別感謝 🥰。&lt;/p&gt;
&lt;h3 id=&#34;其他活動照片&#34;&gt;其他活動照片&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/cloudMile.jpg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/cloudMile_huf0cffeb48bda4a4eea666a4dcb64a097_2231439_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/cloudMile_huf0cffeb48bda4a4eea666a4dcb64a097_2231439_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;企業參訪: CloudMile 萬里雲&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation2.jpg&#34;
	width=&#34;3024&#34;
	height=&#34;4032&#34;
	srcset=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation2_hu542c0e0a6483ce21791f68835b06508d_3160110_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation2_hu542c0e0a6483ce21791f68835b06508d_3160110_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;與校務夥伴的合照(Carolyn &amp; Luna)&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;75&#34;
		data-flex-basis=&#34;180px&#34;
	
&gt;
&lt;img src=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation3.jpg&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation3_hu62d8f991c8cfff50947078904b86019a_2541522_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/appworks-school-campus-program-batch-3-review/graduation3_hu62d8f991c8cfff50947078904b86019a_2541522_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;與導師 Frank 的合照&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>實驗室趣談</title>
        <link>https://victorchao996.github.io/p/independent-study-project-labotatory-observation/</link>
        <pubDate>Mon, 06 Feb 2023 16:17:03 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/independent-study-project-labotatory-observation/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/independent-study-project-labotatory-observation/lesson.jpg" alt="Featured image of post 實驗室趣談" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;大四上學期結束，也就意味著專題正式告一段落(這句話怎麼有故莫名的熟悉感)。當初大三下結束誤以為整個專題活動已經結束(雖然課表上有這門課，但教授通常會放人)，於是就先寫了本blog的第一篇文章: 
&lt;a class=&#34;link&#34; href=&#34;https://victorchao996.github.io/p/independent-study-project-10things/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;關於大三專題我學到的十件事&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;當時想說技術&amp;amp;雜談方面的文章稍後就寫，後來開學才得知大四上專題還要繼續，於是這篇文章就被擱置了。&lt;/p&gt;
&lt;p&gt;擱置的原因一方面是當時還繼續在開發，二方面是為了推甄的事情還有求於教授們。而現在學期結束，與教授沒有任何關係了，我也比較能安心的寫下這些我對實驗室的觀察。&lt;del&gt;(可以開臭囉)&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;專題開發介紹&#34;&gt;專題開發介紹&lt;/h2&gt;
&lt;p&gt;我加入的是基於&lt;strong&gt;虛擬整合技術的智慧醫療實驗室&lt;/strong&gt;，主要開發能應用於醫療上的遊戲。我們實驗室根據不同計畫對象提出的要求去開發，而這些對象包括: 醫院、學校、政府單位等。&lt;/p&gt;
&lt;p&gt;當時的情況是專題生被平均分配到不同計畫底下去做開發。通常計畫底下都有一位&lt;strong&gt;碩二生、一位碩一生與1~2位專題&lt;/strong&gt;生。&lt;/p&gt;
&lt;p&gt;而我加入的計畫要求的內容是幫助開發一款給原鄉老人玩的運動遊戲。&lt;/p&gt;
&lt;h2 id=&#34;有待改進的事情&#34;&gt;有待改進的事情&lt;/h2&gt;
&lt;p&gt;以下觀點皆是從我個人出發，難免有些主觀，不過我會盡量用客觀的事實來敘述我所看到的事情。&lt;/p&gt;
&lt;h3 id=&#34;1-開發上沒有統一規範&#34;&gt;1. 開發上沒有統一規範&lt;/h3&gt;
&lt;p&gt;在正式開發前期實驗室學長有給遊戲開發的框架，教授們也希望遊戲開發上可以遵循框架的規則下去開發。&lt;/p&gt;
&lt;p&gt;然而遊戲&lt;strong&gt;開發框架的檔案不僅版本過時，而且說明文件也不夠完善&lt;/strong&gt;，對於剛加入實驗室的專題生來說很頭痛。&lt;/p&gt;
&lt;p&gt;幸好跟我一起合作開發的碩一、碩二生決定不使用遊戲框架，也因為我們開發的遊戲剛好不需要紀錄其他的資料所以沒有被限制必須使用。&lt;/p&gt;
&lt;p&gt;我後來才知道不僅框架的使用沒有統一，連開發的程式碼&amp;amp;專案都沒有統一管理。例如: 我們計畫共同開發是用實驗室架設的Gitea平台，但有的組別則是完全在本地端開發，互相不清楚開發的進度與狀況。&lt;/p&gt;
&lt;h3 id=&#34;2-開發說明文件平台沒有統一管理&#34;&gt;2. 開發說明文件平台沒有統一管理&lt;/h3&gt;
&lt;p&gt;實驗室上的計畫多是延續之前研究生or專題生開發過的東西去做修改or改進，但弔詭的是&lt;strong&gt;專案的開發卻沒有可以讓後人快速上手的開發文件(類似ReadMe等檔案)&lt;/strong&gt;。能參考的東西只有先前的原始檔&amp;amp;專題生的專題說明文件😅(類似期末報告的PDF)，對於一個以開發為主的實驗室居然會有這種狀況，真的很可怕。&lt;/p&gt;
&lt;p&gt;這件事情還沒完，我參加整整兩個學期的專題會議，聽著另外一位專題生報告說他將開發上遇到的困難都寫在hackMD(一個以markdown文件作為基礎的協作平台)上，也說若有相關問題可以向他要開發筆記。我原本也不疑有他，結果到了大四上(第三個學期)的期中我才發現，實驗室有共用的wiki 🤬。&lt;strong&gt;當下真不知道該怎麼吐槽，要馬是學長姊沒有告知專題生有wiki，要馬就是到了這個時間點才創建&lt;/strong&gt;。&lt;del&gt;(但很顯然是前者，因為我找到兩年前的測試留言)&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-實驗室設備無管理&#34;&gt;3. 實驗室設備無管理&lt;/h3&gt;
&lt;p&gt;在統一管理的事情上，前面兩點算是我對於開發上的一些意見，就算不做也不會有多大的障礙，頂多效率不佳罷了。但接下來要談這件事情真的超誇張，我實在是想不懂這種沒有好好規範的行為到底為什麼可以容許&amp;hellip;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;實驗室設備無管理! 無管理! 無管理!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;與那些主要在做AI或雲端運算相關的實驗室不同，我們lab的計畫會使用到各種實體的設備，例如: &lt;strong&gt;VR設備、webcam、Android TV、sensor等不下五種設備&amp;amp;相關裝置&lt;/strong&gt;。在設備這麼多的情況下，實驗室不僅沒有弄一個登記借用系統出來，反而將設備到處亂放。我到現在還記得實驗室門口進來的第一個座位沒有坐人，而是堆滿各種數據線材&amp;amp;小裝置，而旁邊的走道則放滿各種裝置的箱子。&lt;/p&gt;
&lt;p&gt;如果說開發的項目是連接到電腦的設備那還好說(畢竟會一直連接著電腦)，但像我開發上會使用到bike sensor體積較小，很容易弄丟。當時就曾發生學長幫忙買完設備不久後就找不到設備的蠢事，好在當時我有事先預留sensor，才不至於又要花時間去買。&lt;/p&gt;
&lt;h3 id=&#34;4-計畫互相不相關&#34;&gt;4. 計畫互相不相關&lt;/h3&gt;
&lt;p&gt;這一點就比較直觀了，因為實驗室接了許多計畫，而這些計畫彼此可能沒有任何相關，以至於不同計畫的參與者無法互相幫忙。而每個計劃的&lt;strong&gt;要求、開發狀態、特殊形況&lt;/strong&gt;都不同，在沒有好好記錄的情況下教授要對每個計劃都問題要全盤理解幾乎是不可能的。因為計畫互不相關，這也間接導致後面兩點問題。&lt;/p&gt;
&lt;h3 id=&#34;5-教授沒有指導作用&#34;&gt;5. 教授沒有指導作用?&lt;/h3&gt;
&lt;p&gt;雖然我沒有親身經歷過碩士生的日常，但在詢問過碩班學長後才發現碩士生與我們專題生並無太大的差異。都是針對計畫的內容下去做開發。然而與專題生不同的是碩士生為整個計畫的實際負責人，除了開發外也要與計劃端的人開會回報開發進度。簡單的來講，&lt;strong&gt;老師把計畫接回來之後，開發上就全部交由碩士生來負責&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而我們與教授的meeting就是大家輪流報告自己本周的開發進度。為何我會說&amp;quot;教授沒有指導作用&amp;quot;? 因為教授完全無法提供任何開發上的幫助，反而還會提出一些天馬行空的改進。&lt;strong&gt;比起老師，我認為用&amp;quot;老闆&amp;quot;來比喻反而更貼切。&lt;/strong&gt; 而實際上老師的確就是拿學生完成的開發去對外取得一些計畫，我也是後來才意外得知這件事。&lt;/p&gt;
&lt;h4 id=&#34;緊急修改&#34;&gt;緊急修改&lt;/h4&gt;
&lt;p&gt;某一天學長很緊急的找我做先前開發成果上的改進，希望我能幫忙修改專案。我心想: 「不對阿，這project是因為先前的設備已不可用，在老師的建議之下改成使用實驗室購買的設備運行，應該已經完成了阿? 」&lt;/p&gt;
&lt;p&gt;當時的情況是這樣，儘管感覺專案之後都不會再使用，但因為鄰近期末要收尾了就順便把修改給完成了~~(順便水個進度)~~。我認為整件事情告一段落，於是過後就被我忘了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;我:「為什麼需要修改?」&lt;/li&gt;
&lt;li&gt;學長:「老師要拿這專案的執行檔去DEMO。」&lt;/li&gt;
&lt;li&gt;我:「???」&lt;/li&gt;
&lt;li&gt;學長: 「我也不知道，老師突然跟我說這周末他要展示這個遊戲，可能又要拿去接什麼計畫吧?」&lt;/li&gt;
&lt;li&gt;我: 「為什麼&amp;hellip;.那個遊戲前的設置明明就超難用&amp;hellip;..」&lt;/li&gt;
&lt;li&gt;學長: 「我也知道，但老師就需要拿去展示&amp;hellip;..」&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;聽完後我也只能硬著頭皮幫忙修改我已經不想再碰的專案，畢竟整個實驗室只有我了解原先專案的核心程式碼。&lt;/p&gt;
&lt;h4 id=&#34;專案問題&#34;&gt;專案問題&lt;/h4&gt;
&lt;p&gt;說回專案開發，在meeting的過程中我漸漸發現教授不了解為何當初開發上會遇到困難，盡管計畫負責的學長不厭其煩地解釋好幾遍。不論是設備、技術等問題都告知過教授，但我猜教授的心態可能是: 原本可以做到的事情，為什麼現在不行? 這也間接導致我在專題開發上逐漸心灰意冷，因為我清楚明白&lt;strong&gt;自己白白投入了不少時間，去完成一個其實不需要存在的需求&lt;/strong&gt;。以我的角度來看，我認為當初開發的東西既不好玩，也不好用。而礙於現實考量，我卻不得不為了學分而低頭。&lt;/p&gt;
&lt;h3 id=&#34;6-組織像一盤散沙無向心力&#34;&gt;6. 組織像一盤散沙無向心力&lt;/h3&gt;
&lt;p&gt;計畫很多但整個實驗室感覺很混亂，這個狀態從meeting
就可以略之一二。老實說儘管聽了三學期的meeting，我還是對其他人開發的項目不是很了解，畢竟每周開發進度都是專題生自己決定的。&lt;strong&gt;連我都不清楚其他計畫實際的開發情況了，更不用說教授了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相信有不少人跟我一樣發現這件事，我也觀察到&amp;quot;部分人&amp;quot;每周的進度報告內容文字逐漸空洞起來。&amp;ldquo;解決XX上的bug&amp;rdquo;，&amp;ldquo;研究XXX部分&amp;quot;之類的文字開始多了起來。不過這也不能怪他們，畢竟你內容準備的再認真，頂多也只會換來: 「很不錯，繼續加油」之類的話。老師根本不在乎你開發上的細節，他只在乎成品能達到的效果。所以只要每周的報告只要看起來像是有進度就好，&lt;strong&gt;我甚至感篤定偶爾拿前一周的開發進度來報告也沒有人會發現&lt;/strong&gt;(沒錯，就是這麼混亂)。&lt;/p&gt;
&lt;p&gt;在這種混亂的情況下，把已經完成的進度分成兩周來報告根本是家常便飯。這時候有人可能會說那計畫的負責人碩士生呢? 很抱歉，他們也不是全部都清楚專題生的狀況，畢竟他們手上可能同時負責1~2個計畫開發，更不用說還有無數的會議&amp;amp;碩士論文，能擠出時間回復專題生就真的要謝天謝地了。&lt;/p&gt;
&lt;p&gt;講了這麼多，反正整個實驗室給我的感覺可以用四個字 &lt;strong&gt;&amp;ldquo;各取所需&amp;rdquo;&lt;/strong&gt; 來總結。老師接一堆計畫來賺錢，碩士生為了文憑與每個月微薄的薪水來幫老師開發，而專題生就是為了學分的免費勞工。在這種狀況下，開發出來的遊戲(產品)的品質能高到哪裡去? 就算計畫端那邊能接受開發出的軟體，我也受不了自己寫的醜code。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;以上就是當初在實驗室的一些所見所聞拉，雖然有太多事情值得我吐槽了，不過也是因為我對於現況不太滿意，所以才會注意到以上幾點，倘若根本不在乎的話也不會洋洋灑灑地寫下這麼多字了。現在的我總算明白學長姐說的: 我們系上的專題風氣(比起前面的學校)不太好是怎麼一回事。但我自認為還是挺幸運的，這三個學期下來學到挺多的(軟硬實力都有)，比起被教授完全放生的同學，我至少有學到不少事?&lt;/p&gt;
&lt;p&gt;PS: 有聽說部分教授一個月才與專題生meeting，有的甚至跟學生玩躲貓貓呢XD。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2022年回顧</title>
        <link>https://victorchao996.github.io/p/2022review/</link>
        <pubDate>Sat, 31 Dec 2022 16:17:03 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/2022review/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/2022review/2022.jpg" alt="Featured image of post 2022年回顧" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;今年發生許多事情，可以說是充滿挫折&amp;amp;挑戰的一年，不過也是我自認為成長最多的一年。在這個2022年即將結束之際，要來好好回顧一下今年發生的一些事情。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;年度目標&#34;&gt;年度目標&lt;/h2&gt;
&lt;p&gt;去年列出的年度目標已經被我拋在腦後，唯一記得的項目&lt;strong&gt;只有閱讀7本書&lt;/strong&gt; &amp;amp; 準備&lt;strong&gt;研究所升學&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;閱讀七本書&#34;&gt;📕閱讀七本書&lt;/h3&gt;
&lt;h4 id=&#34;起因&#34;&gt;起因&lt;/h4&gt;
&lt;p&gt;去年九月左右意外接觸到Pocast節目 &lt;em&gt;&amp;lt;下一本讀什麼?&amp;gt;&lt;/em&gt; 與 &lt;em&gt;&amp;lt;電扶梯走左邊&amp;gt;&lt;/em&gt; 後，顛覆了我對於課外讀物的認知。&lt;strong&gt;前者讓我認識到有許多的書本具有獨到的見解與觀點，足以改變讀者的一生；而後者則是讓我認識到，廣泛閱讀是所有優秀人物都具有的特點。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;閱讀的多寡對人具有巨大的影響: 從&lt;strong&gt;談吐、待人處事、看事情的角度&lt;/strong&gt;等，都可能隨著知識吸收的多寡而有著不同的差別。節目中的訪談人物談吐有自信且具有內涵，除此之外，他們目標明確且願意跳脫舒適圈去追隨自己的嚮往。聆聽節目的當下總是能獲得力量，這對當時的我來說是很特別的體驗。&lt;strong&gt;對比周遭的人事物的平淡，我對訪談者認真生活的態度產生了嚮往之情&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我希望自己也能變為令人憧憬的存在，於是就此展開我閱讀書本的旅程。&lt;/p&gt;
&lt;h4 id=&#34;第一本書&#34;&gt;第一本書&lt;/h4&gt;
&lt;p&gt;一開始是從 &lt;em&gt;《原子習慣》&lt;/em&gt; 這本經典的工具書開始閱讀(因為家裡剛好有)，如果說Podcast是顛覆我對於閱讀書本的看法，那閱讀 &lt;em&gt;《原子習慣》&lt;/em&gt; 這本書就是顛覆我對於閱讀書本的體驗。&lt;/p&gt;
&lt;p&gt;從小到大都不是很喜歡閱讀純文字的書。看著密密麻麻的文字，光是閱讀的動作就很吃力了，更別提看完當下是否有吸收到內容。在閱讀的過程中完全感受不到快樂，這也導致我基本上不太看課外書籍。如果你在大三之前問我有沒有在讀什麼書籍，我一本也答不上來。&lt;/p&gt;
&lt;p&gt;然而 &lt;em&gt;《原子習慣》&lt;/em&gt; 這本書不同，作者在介紹觀點或相應的方法之前會由故事開頭，再利用故事引述出章節的重點觀念，最後再提供改善習慣的方法。這樣的寫作編排不僅閱讀的過程中很有趣，事後回想重點觀念&amp;amp;方法時也能順著寫作的脈絡快速回顧重點，方便記憶。&lt;/p&gt;
&lt;h4 id=&#34;閱讀更多的書&#34;&gt;閱讀更多的書&lt;/h4&gt;
&lt;p&gt;有了好的經驗做為開頭，我做了不少以前不會去做的行動。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去圖書館借書(並且看完)&lt;/li&gt;
&lt;li&gt;翻看家裡的書本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;買書&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;做讀書筆記&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;寫書本閱讀心得&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這些行為如果放在2.3年前來看，我一定會覺得自己瘋了，居然自己掏錢買書。不過現在看來這是正確的選擇，並且以後還會持續下去。&lt;/p&gt;
&lt;p&gt;結果現在盤點一整年的閱讀才發現，不知不覺就&lt;strong&gt;看了超過10本書&lt;/strong&gt;，這還未含看到一半的書本，大大超乎我的預期。&lt;/p&gt;
&lt;h3 id=&#34;準備研究所升學&#34;&gt;🏫準備研究所升學&lt;/h3&gt;
&lt;h4 id=&#34;想法產生&#34;&gt;想法產生&lt;/h4&gt;
&lt;p&gt;想要繼續升學的念頭本來不存在，不過大三下(大約3月左右)的時候參加完企業博覽會後就產生轉變。以國立大學資工系的同學來說，大部分的同學都會選擇繼續升學。而&lt;strong&gt;選擇繼續升學的兩大原因: 起薪高 &amp;amp; 不想提早進入職場。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;而我的考量是後者，事實上，以我的觀察，很大一部分的同學是對未來感到迷惘。不是&lt;strong&gt;不清楚未來要從事的職業，不然就是因為沒有具備工作需要的技術。&lt;/strong&gt; 在學校的所學不僅沒有使學生更上一層樓，反而消磨學生的信心，至少以資工系所學來說，無法應付工作所需具備的專業知識&amp;amp;技能。&lt;/p&gt;
&lt;h4 id=&#34;痛苦的過程&#34;&gt;痛苦的過程&lt;/h4&gt;
&lt;p&gt;原本的課業成績就不太好，所以研究考試的六大必修科目都不是到很擅長，在暑假準備的過程感覺特別辛苦。然而在準備的過程中我逐漸意識到，&lt;strong&gt;考試這方面我既不擅長也不喜歡&lt;/strong&gt;，每天讀著未來用不到的知識，像極了當初高中準備升學考試的我。我清楚明白，就算我在考試前把這些知識都背的滾瓜爛熟，考試後這些知識就又會被我拋到腦後。&lt;/p&gt;
&lt;p&gt;在明確釐清自己的想法後，我毅然決然在大四上開學時(九月左右)放棄研究所考試。&lt;/p&gt;
&lt;h4 id=&#34;研究所推甄&#34;&gt;研究所推甄&lt;/h4&gt;
&lt;p&gt;在準備研究所考試的前期原本是不打算推甄，因為明白自己的成績不好看，系排趴數也不夠前面，不想浪費時間去準備備審資料。但在家人的鼓勵之下，還是在九月初的時候準備資料並且完成本校的報名流程。&lt;/p&gt;
&lt;p&gt;先說結論，放榜結果為備取300多。很可惜已經超出歷屆能備取上的範圍，確定不可能上。當下其實有點氣，氣的是一方面以為專題競賽有得獎但備取名次卻這麼後面(還以為中央會保本校的QQ)，二方面是投入時間心力卻沒有好的結果。放榜的那幾周直接使我陷入低潮期，對事物提不起勁，大腦不斷產生否定自己的聲音，只能用社群媒體來填補糜爛的自己。事後往回看那個時間點還真是可怕，活了21年沒遇過這麼大的挫折。&lt;/p&gt;
&lt;p&gt;雖然不管是考試還是推甄兩邊都不順利，不過我也在準備的過程中慢慢的發現自己真心喜歡的事物。&lt;strong&gt;我喜歡實作多於理論上的知識，喜歡製作使用者能看到的畫面&amp;amp;功能&lt;/strong&gt;。原本想要成為遊戲工程師的想法也有所改變，心裡想著我說不定能成為一個前端工程師。我也在有了新的目標&amp;amp;生活的意義後，慢慢走出低潮。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;盤點完成的事件&#34;&gt;盤點完成的事件&lt;/h2&gt;
&lt;p&gt;雖然今年遇到的挫折特別多，不過也是有許多值得紀錄的事情。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完成專題進度
&lt;ul&gt;
&lt;li&gt;獲得專題競賽-佳作&lt;/li&gt;
&lt;li&gt;卡了整個學期(大三上)，終於在大三下有重大突破&lt;/li&gt;
&lt;li&gt;順利完成計畫端的遊戲開發&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;獲得第一份薪水:
&lt;ul&gt;
&lt;li&gt;被老師邀請去當大一英文課程助教&lt;/li&gt;
&lt;li&gt;協助同學完成自學小組產出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;讀完超過10本書:
&lt;ul&gt;
&lt;li&gt;體會到讀書的樂趣&lt;/li&gt;
&lt;li&gt;增廣見聞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;人生第一次正式面試
&lt;ul&gt;
&lt;li&gt;去參加AppWorks School Campus Program 的面談&lt;/li&gt;
&lt;li&gt;拍自我介紹影片&amp;hellip;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2023年年度目標&#34;&gt;2023年年度目標&lt;/h2&gt;
&lt;p&gt;在2022年的年末，不免俗的也要來立個新年新希望。不用什麼特別的大計畫，只求合理且能達成的就好。&lt;/p&gt;
&lt;h3 id=&#34;健康&#34;&gt;健康&lt;/h3&gt;
&lt;p&gt;我希望能達成的事項or習慣:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;早睡早起(不熬夜也不貪睡)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;盡量睡滿7小時&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;少吃炸物且不過量飲食&lt;/li&gt;
&lt;li&gt;每周運動至少3次，每次至少20分鐘
&lt;ul&gt;
&lt;li&gt;散步or跑步&lt;/li&gt;
&lt;li&gt;打球&lt;/li&gt;
&lt;li&gt;健身運動or健身房&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;每日看螢幕時間不超過8小時
&lt;ul&gt;
&lt;li&gt;每次不連續超過2小時&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;知識&#34;&gt;知識&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;多看課外書本&lt;/li&gt;
&lt;li&gt;追蹤優質創作者: 觀看其影片、文章、電子報&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;減少無益的社群媒體(IG、FB、Youtube影片)使用時間&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;限制手機app使用&lt;/li&gt;
&lt;li&gt;限制筆電使用情境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;學業事業&#34;&gt;學業/事業&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;每天花最少1.5小時自主學習&lt;/li&gt;
&lt;li&gt;輸入&amp;amp;輸出(學習-&amp;gt;重點整理-&amp;gt;筆記-&amp;gt;撰寫文章)&lt;/li&gt;
&lt;li&gt;積極尋找學習的機會(讀書會、面試)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;人際關係形象&#34;&gt;人際關係/形象&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;約許久未見的同學吃飯&lt;/li&gt;
&lt;li&gt;多笑，多與人打招呼&lt;/li&gt;
&lt;li&gt;改善穿著&lt;/li&gt;
&lt;li&gt;持續經營Blog&lt;/li&gt;
&lt;li&gt;架設個人網站(自介、作品集)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上就是2023年想要達成的一些目標喇，期許自己能順利的完成。雖然上述各點都沒有那種突破性的事項，但若能全部達成也是一種成就，若2023年有辦法照上面的期望來達成，那一整年肯定是非常充實的。&lt;/p&gt;
&lt;h2 id=&#34;結語&#34;&gt;結語&lt;/h2&gt;
&lt;p&gt;關於2022年的一整年遇到的各種挫折真的可以寫好幾篇文章。但我想了想還是把時間花在其他能讓我成長的事情上好，倘若我真的寫下去，又會陷入一種自己不太好的感覺，這不是我所期望的。希望邁入下一年的過程中，我能把2022年的苦澀給拋在腦後，也期許自己2023年能活得更有意識。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;希望2023年的每一天活的認真又快樂。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;圖片來源: &lt;a class=&#34;link&#34; href=&#34;https://unsplash.com/photos/-64OzuZ8ThE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://unsplash.com/photos/-64OzuZ8ThE&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>關於大三專題我學到的十件事</title>
        <link>https://victorchao996.github.io/p/independent-study-project-10things/</link>
        <pubDate>Sun, 03 Jul 2022 16:17:03 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/independent-study-project-10things/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/independent-study-project-10things/lesson.jpg" alt="Featured image of post 關於大三專題我學到的十件事" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;大三下課程結束，也就意味著專題也告一段落，趁著還沒忘記這段寶貴的經驗之前，趕緊來回顧並總結自己這兩個學期學到的幾件事情。因為可以記錄的事情真的很多，所以這篇會比較著重在自己歸納出這兩個學期學習到的&lt;strong&gt;經驗&lt;/strong&gt;，我會盡量不要提及太多技術相關的名詞，讓焦點專注在經驗上，希望這篇文章對未來閱讀的讀者(包括我自己)有實質的幫助。&lt;/p&gt;
&lt;p&gt;至於整個專題使用到的技術以及遇到的困難，我會另外寫在其他篇文章上。&lt;/p&gt;
&lt;h2 id=&#34;學到的寶貴經驗&#34;&gt;學到的寶貴經驗&lt;/h2&gt;
&lt;p&gt;下面就列舉&lt;strong&gt;十個&lt;/strong&gt;我學習到的寶貴經驗，雖然我自認為混了兩個學期，不過仔細回想還是有學到不少內容。我打算把它寫下來，好說服自己多少還是有學到點東西。&lt;/p&gt;
&lt;h3 id=&#34;1做好充足的準備再下決定&#34;&gt;1.做好充足的準備再下決定&lt;/h3&gt;
&lt;p&gt;當初大二下在找專題指導教授的時候沒有好好的評估與思考就直接決定要加入現在的實驗室，現在往回看總覺得沒有好好地評估過在下決定有點可惜。當時沒有認真思考實驗室方向與未來生涯的發展性，如果我可以回到過去，我一定會仔細的評估以下三點: &lt;strong&gt;教授的專長&amp;amp;實驗室的技術方向、教授的指導態度、專題生的參與度&lt;/strong&gt;，而興趣應該要放在這三點之後。&lt;/p&gt;
&lt;p&gt;以當時的眼界與知識廣度絕對無法讓我決定出當前最好的選擇，不過就我所知有參加專題說明會的教授中，這個教授以及他的實驗室所做的方向最接近我有興趣的開發，也就是&lt;strong&gt;遊戲開發&lt;/strong&gt;。於是我就選擇加入了。&lt;/p&gt;
&lt;p&gt;至於實驗室實際情況如何(笑)，我會另開一篇文章來寫，能談的東西實在太多了。&lt;/p&gt;
&lt;h3 id=&#34;2好的溝通幫你省時間&#34;&gt;2.好的溝通幫你省時間&lt;/h3&gt;
&lt;p&gt;好的溝通真的很重要!這個觀念是我上半學期最大的感想。當初參與計畫端的會議時有一起討論，不過計畫端的要求一直不是很明確，有新增修改。除此之外，也許是計畫端那邊的教授很忙同時有很多個案子在跑，所以比較沒有特別關注我這邊開發的東西。最後的結果就是，跟計畫端那邊demo好幾周之後才發現&lt;strong&gt;方向根本做錯&lt;/strong&gt;，浪費了好幾周。&lt;/p&gt;
&lt;p&gt;其實上述問題的發生與計畫端也有一點關係，不過後來仔細想想如果自己夠積極主動是可以避免的，只能說自己還有很大的改進空間。詳細發生的問題會寫在另外一篇上。&lt;/p&gt;
&lt;h3 id=&#34;3提前計畫不會吃虧&#34;&gt;3.提前計畫不會吃虧&lt;/h3&gt;
&lt;p&gt;大三上與大三下的所修的課程偏多，兩學期的課程都有到&lt;strong&gt;21學分(含專題)&lt;/strong&gt;，相較於每學期的最低標準16學分來說應該算滿多的。剛開學的時候還算輕鬆，當期中考周或是期末考周來臨的時候，就會感到時間嚴重不夠用，各種報告&amp;amp;考試都集中在這一兩周內，壓力有夠大。&lt;/p&gt;
&lt;p&gt;所以提前規劃好各種事情比較不會手忙腳亂。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/independent-study-project-10things/Test_and_Homework.jpg&#34;
	width=&#34;1050&#34;
	height=&#34;242&#34;
	srcset=&#34;https://victorchao996.github.io/p/independent-study-project-10things/Test_and_Homework_hu66b04167eb7bc5feb0da95d25dd9c2d2_96130_480x0_resize_q75_box.jpg 480w, https://victorchao996.github.io/p/independent-study-project-10things/Test_and_Homework_hu66b04167eb7bc5feb0da95d25dd9c2d2_96130_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;圖片: 大三上期末-考試&amp;報告轟炸&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;433&#34;
		data-flex-basis=&#34;1041px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;4有些事情不是你的錯但卻是你的責任&#34;&gt;4.有些事情不是你的錯，但卻是你的責任&lt;/h3&gt;
&lt;p&gt;剛加入實驗室的時候，原本要做的項目有學長的專案可以參考，但後來發現學長開發的專案所使用的&lt;strong&gt;設備已經停產&lt;/strong&gt;了。而且更慘的是，深入研究學長的專題後發現，專案中的程式碼是來自設備商發佈在平台上的開發套件(姑且稱他為prefab吧)，總而言之就是一個可以直接拿來用的套件，前提是要使用他們家的產品。&lt;/p&gt;
&lt;p&gt;當時我遇到的第一個大問題就是，我要拿著&lt;strong&gt;新的設備來達到相近的功能，但我沒有可以參考的script&lt;/strong&gt;。而我遇到的第二個問題是，&lt;strong&gt;實驗室沒有人做過類似的，連碩班學長都沒有&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;有一段時間真的有點崩潰，我想要達到的功能網路上相關的資料很少，應該說幾乎沒有。為什麼相關資料很少呢? 這就跟我想要達到的功能有關了。老師的要求是希望能用設備來控制遊玩，就像是學長專題做的東西。然而，實驗室所購買的這個設備是一個&lt;strong&gt;完整的產品&lt;/strong&gt;，開發商販賣這個設備的目的是希望買家可以購買他們製作的遊戲，換句話說，是為了讓玩家體驗這款遊戲而販賣這個設備。&lt;strong&gt;這個設備被販賣目的從一開始就不是為了開發&lt;/strong&gt;，自然而然在官網上就不會出現針對這個設備的開發文件、開發套件、或API可以讓我來研究使用。&lt;/p&gt;
&lt;p&gt;這也間接導致我大三上學期整個進度大當機，只能先去做比較次要的開發，好讓每周的meeting內容看起來不會這麼水。不過最後還是躲不掉老師的提問，有好幾周都只能尷尬的回說，「這部分我還在努力研究中&amp;hellip;」。&lt;/p&gt;
&lt;p&gt;抱怨歸抱怨，不過這也是當時我自己需要克服的問題；我想說的是，&lt;strong&gt;有些事情不是你的錯，但卻是你的責任。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;5別跟自己過不去&#34;&gt;5.別跟自己過不去&lt;/h3&gt;
&lt;p&gt;除了上面提到問題，還有不少讓我灰心的各種事情，包括開發的項目與我當初加入實驗室前的期望不同、製作的遊戲很無聊、教授的態度等等。&lt;/p&gt;
&lt;p&gt;導致我大三上有好一段時間心情很沮喪(尤其是期中周前後&amp;amp;期末事情一多的時候)，算是進入一個&lt;strong&gt;低潮期&lt;/strong&gt;吧。那段時間常常出現自我懷疑，尤其在與同學聊天的過程中了解到同學們在專題上的所學與進度之後，我就會問自己:「你現在在幹嘛? 這真的是你希望的嗎? 你對現在的生活滿意嗎?」，而答案顯而易見: &lt;strong&gt;我很不滿意&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;後來我心念一轉，&lt;strong&gt;很多事情不是我能控制的&lt;/strong&gt;，因此&lt;strong&gt;只需要專注在我能努力的事情&lt;/strong&gt;就好，至於我無法改變的事情就隨他去吧。除此之外，在寒假休息期間我也鼓勵自己下個學期無論如何都要努力把這個這個功能給做出來，不然以後的我肯定會很後悔。&lt;/p&gt;
&lt;p&gt;我必須說，壓力大的時候做點可以舒緩壓力的事情真的很重要! 無論是打球運動、看影片玩遊戲、聽音樂娛樂，或甚至找朋友聊聊都很有幫助。特別感謝與我同一個實驗室的專題生&lt;strong&gt;小崴&lt;/strong&gt;時常在meeting完之後陪我吃飯聊天，雖然我們加入的計畫不同，但都有遇到各種鳥事XD，互相吐苦水大大的幫助我紓解壓力。所以壓力大的時候別跟自己過不去，撐到最後才是真的!&lt;/p&gt;
&lt;h3 id=&#34;6不要指望別人會對你有幫助&#34;&gt;6.不要指望別人會對你有幫助&lt;/h3&gt;
&lt;p&gt;在前面提到的低潮期中，我甚至還一度萌生出擺爛的想法，總想著如果讓老師調人來支援我，或乾脆老師把我換到別的計畫底下去做那該有多好。但那也只是我在壓力大的時候所產生的想法罷了，最後也沒有如願發生。&lt;/p&gt;
&lt;p&gt;後來我想通了一件事那就是，&lt;strong&gt;「不要期待別人總會對你有幫助」&lt;/strong&gt;。每個人都有自己的事情要忙，而且實際上他們也沒有義務要幫忙，所以很多事情還是要靠自己來，俗話說的好:&lt;strong&gt;「師父領進門，修行在個人。」&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;7真的不行的時候還是要尋求幫助&#34;&gt;7.真的不行的時候還是要尋求幫助&lt;/h3&gt;
&lt;p&gt;雖然才說不要期待別人會對你有幫助，但這樣講並不代表你不能主動去尋求幫助。事實上，當一件事需要花費大量的時間跟力氣來做，卻仍然沒有什麼實質進展時，這時反而要&lt;strong&gt;檢討自己是不是方法不正確&lt;/strong&gt;。當遇到困難時，比起自己埋頭苦幹，尋求他人的意見或幫助才是正確的。&lt;/p&gt;
&lt;p&gt;在這邊也要特別感謝Yo學長的幫助，在我遇到困難的時候有丟一些網路的資料，或是提供我一些想法，甚至提供我對這方面有經驗的開發者的微信帳號讓我可以向他請教問題(雖然最後還是沒有幫助就是了XD)。另外也要特別感謝Yang學長的幫助，在我開發上遇到困難時，幫助我分析問題可能的原因。沒有這兩人的幫助，我沒有辦法順利的完成這個專題成果。&lt;/p&gt;
&lt;h3 id=&#34;8你認為很基本的事情在其他人眼中可能看起來很難&#34;&gt;8.你認為很基本的事情在其他人眼中可能看起來很難&lt;/h3&gt;
&lt;p&gt;在上面提到的問題終於解決的時候，還記得有不只一個研究生跟我說你這個真的厲害，直接硬幹寫出來。但如果將我達到最終結果的步驟一一拆解，其實也沒有用到多艱深的技術，在查找資料的過程中，我也很幸運的找到某位大大在GitHub上開源的API，使用這個API我就可以在使用的軟體中獲取到藍芽設備傳送過來的data。最後經過一番臨摹參考別人的scipt才得以客製化一個能在專案中使用的script，其中也包括&lt;strong&gt;轉換設備傳送來的原始數據&lt;/strong&gt;，這也是為什麼學長會覺得硬幹真的猛。但講真的，如果該設備一開始就有開發套件可以使用，那我也不需要為了這件事情焦頭爛額半個學期，我也可以花更多時間在改善其他部份上。&lt;/p&gt;
&lt;h3 id=&#34;9人都是自私的&#34;&gt;9.人都是自私的&lt;/h3&gt;
&lt;p&gt;在遇到困難的那幾周meeting時，我在報告的簡報中都會放上遇到的困難，希望讓老師了解我無法解決。我也在幫自己找理由，試圖製造出&lt;strong&gt;我努力過了，但我就是無法&lt;/strong&gt;的假象，但當我後來發現老師根本不太在乎，也不想幫我的時候，我就改變主意了。&lt;/p&gt;
&lt;p&gt;我不再提出我遇到的困難，變成單純的報告自己完成的進度。我甚至會在比較忙的時候把&lt;strong&gt;已經完成的進度&lt;/strong&gt;分成兩周來報告，剛加入實驗室的熱情早已燃燒殆盡，只剩交差了事。個人心境的變化可以談的比較多，而這跟我們實驗室的專題性質有很大的關係，之後會在另一篇文章中分享，總而言之就是我最後也&lt;strong&gt;逐漸走向偷懶的道路&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人都是自私的&lt;/strong&gt;，教授也是、學長也是，我也是。&lt;/p&gt;
&lt;h3 id=&#34;10一切都是最好的安排&#34;&gt;10.一切都是最好的安排&lt;/h3&gt;
&lt;p&gt;現在這個時間點往回看這兩個學期的日子，雖然有非常多的事情可以吐槽，但我也學到非常多事。我認為自己的&lt;strong&gt;軟實力&amp;amp;硬實力&lt;/strong&gt;都有所提升，提升的程度比起過去修過的任何一堂課程都來的有效果。這兩學期的經驗與過去的學習經驗不大相同，以往我都不太會認真思考並嘗試自己解決問題，遇到問題時通常都是先上網找解答，這個壞習慣也讓我嘗到苦頭。經過這兩學期，我深刻的瞭解到，自己應該要先專研過再去尋找答案，不然若網路上沒有直接的解決方法那豈不是就無解了嗎?&lt;/p&gt;
&lt;p&gt;藉此機會我也了解到為什麼資工系的必修課程我都學不太好，這都是&lt;strong&gt;不求甚解&lt;/strong&gt;的後果，畢竟很多時候作業網路上都有解答對吧? 關於這個問題我之後也會寫一篇文章來分享。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;以上就是我大三專題這兩個學期學到的十件事情，這是我第一次寫這麼長的回顧文，不過機會難得想說稍微記錄一下。這篇文章也會是我發佈在&lt;strong&gt;個人網站&lt;/strong&gt;上的第一篇文章，有一句話是這麼說的，&lt;strong&gt;「寫作，是最好的自我投資。」&lt;/strong&gt;，我很想看看這句話是不是真的，試想自己如果持續公開寫作1年、5年，甚至10年? 成果怎麼樣我不知道，但我會試試看。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
