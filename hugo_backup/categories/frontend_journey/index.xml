<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>前端學習之路 on Victor&#39;s Blog</title>
        <link>https://victorchao996.github.io/categories/frontend_journey/</link>
        <description>Recent content in 前端學習之路 on Victor&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 12 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://victorchao996.github.io/categories/frontend_journey/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>第八周-複習 JS &amp; 初步認識 AWS</title>
        <link>https://victorchao996.github.io/p/frontend_learning-8th-week/</link>
        <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-8th-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-8th-week/JavaScript.jpg" alt="Featured image of post 第八周-複習 JS &amp; 初步認識 AWS" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;這周還是繼續地在觀看Udemy上的課程，稍微不同的是Campus Program 前三週遠距學習的內容也公布了，趁著開學前最後一周還有時間的情況下加緊學習。&lt;/p&gt;
&lt;h2 id=&#34;主要學習實作項目&#34;&gt;主要學習&amp;amp;實作項目&lt;/h2&gt;
&lt;h3 id=&#34;javsscript&#34;&gt;JavsScript&lt;/h3&gt;
&lt;p&gt;JS老朋友了，我認為學習JS比較麻煩的有以下幾點:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;語言本身存在怪異性&lt;/li&gt;
&lt;li&gt;新的標準的推出(ES6)&lt;/li&gt;
&lt;li&gt;需要區分JS原生或是瀏覽器提供的API
總之學習JS比我想的還要漫長，因為需要顧慮的點特別多。我只能說阿，&lt;del&gt;不愧是十天內設計出來的語言&lt;/del&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這周學習的項目為:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS basic&lt;/li&gt;
&lt;li&gt;JS functions&lt;/li&gt;
&lt;li&gt;JS DOM &amp;amp; JS events&lt;/li&gt;
&lt;li&gt;JS 非同步程式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AJAX &amp;amp; API&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前四個算是複習了，主要新的學習內容為第五項。包含JSON的概念、使用，另外還包含call API(來獲取JSON)的練習。另外也接觸了API開發工具，相對瀏覽器的Dev tools來說，API工具可以在開發上可以更方便，例如: 觀看headers, JSON資料，或是設定query string等。&lt;/p&gt;
&lt;h3 id=&#34;aws-cloud-service&#34;&gt;AWS Cloud Service&lt;/h3&gt;
&lt;p&gt;Campus Program公布的遠距學習內容其中之一是AWS，比照此計畫的課程大綱&amp;amp;網路上的心得分享後，我猜是要將後端server建立在aws上。與其他領域不同，cloud service是我先前沒碰過的主題，因此在認識AWS的服務上也花了不少時間。&lt;/p&gt;
&lt;p&gt;找了網路上關於aws的學習資源，在了解之餘也動手實作一些項目:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;註冊開通 AWS 帳號&lt;/li&gt;
&lt;li&gt;使用IAM 申請user並給予權限&lt;/li&gt;
&lt;li&gt;設置CloudWatch 監聽帳單規則(根據規則發送警訊)&lt;/li&gt;
&lt;li&gt;新增一個EC2 linux instance&lt;/li&gt;
&lt;li&gt;新增一個S3 bucket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因為AWS 提供的服務實在是太多了，光是要理解每個服務在幹嘛都要花上不少時間，所以下周還有得研究了。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;這一周也是學習了不少新的知識，看著玲朗滿目的前後端知識不免感到焦慮，畢竟要熟悉這麼龐大的知識需要不少的時間，並且這之中還不包括實作&amp;amp;練習的時間🤯。這種遊走在舒適圈邊緣的感覺沒意外的話還會持續個十幾周，希望我能堅持下去! 給自己喊聲加油XD。&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;小馬技術aws系列: &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=G0hvLDTmXig&amp;amp;list=PLliocbKHJNwsyKkNwFUHbZZOJ2gT9qnT9&amp;amp;index=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AWS 中文入门开发教学YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;EC2 linus instance: &lt;a class=&#34;link&#34; href=&#34;https://docs.aws.amazon.com/zh_tw/AWSEC2/latest/UserGuide/EC2_GetStarted.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;教學課程：使用 Amazon EC2 Linux 執行個體 - Amazon Elastic Compute Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS service鐵人賽文章: &lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/users/20083507/ironman/1366&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Amazon Cloud Service 30 days challenge :: 2018 iT 邦幫忙鐵人賽 (ithome.com.tw)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>第七周-購買 Udemy Bootcamp 課程</title>
        <link>https://victorchao996.github.io/p/frontend_learning-7th-week/</link>
        <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-7th-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-7th-week/JavaScript.jpg" alt="Featured image of post 第七周-購買 Udemy Bootcamp 課程" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;相隔了兩個星期，終於又發布這個系列文章了😅。眼看當初設立的每周挑戰變得可有可無，我趕緊來補一下最新的進度。&lt;/p&gt;
&lt;p&gt;上週農曆新年因為電腦不在身邊於是也就沒有任何學習。直到本周因為受不了如此沒有系統化的學習，再加上帳號頭一次購買有推出優惠，於是果斷購買了Udemy的線上課程。雖然為入門課程(Bootcamp)但是課程單元的數量可一點都不馬虎，兩門總計都為64小時的Web課程要全部花完也要花上不少時間。以下是主要學習的內容。&lt;/p&gt;
&lt;h2 id=&#34;主要學習實作項目&#34;&gt;主要學習&amp;amp;實作項目&lt;/h2&gt;
&lt;p&gt;已經有相關基礎的部分直接開兩倍速快速聽過，而簡單介紹屬性的單元就把練習題目做完便速速前往下一個單元。&lt;/p&gt;
&lt;h3 id=&#34;web開發概念&#34;&gt;web開發概念&lt;/h3&gt;
&lt;p&gt;在學習web 開發之前需要的各種基礎觀念:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;網路是什麼?&lt;/li&gt;
&lt;li&gt;前後端的是什麼?&lt;/li&gt;
&lt;li&gt;瀏覽器的作用?&lt;/li&gt;
&lt;li&gt;HTML/CSS/JS 分別扮演什麼樣的角色?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;html&#34;&gt;HTML&lt;/h3&gt;
&lt;p&gt;迅速看過，並做一點練習題目，至於table的部分我完全放掉，我認為以下幾點是學習HTML相對比較重要的內容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basic&lt;/li&gt;
&lt;li&gt;HTML semantic&lt;/li&gt;
&lt;li&gt;HTML form&lt;/li&gt;
&lt;li&gt;form validation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;css&#34;&gt;CSS&lt;/h3&gt;
&lt;p&gt;CSS的部分就是快速複習基礎觀念與屬性，主要的學習策略為多聽多看。雖說進階的部分現階段不是很熟，但我想至少要在實作的當下知道在MDN要搜索哪個關鍵字才好。至於BootStrap我沒有太深入去研究，只是稍微玩一下，等到需要使用的時候再續翻閱文件就好。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;basic&lt;/li&gt;
&lt;li&gt;selector&lt;/li&gt;
&lt;li&gt;container
&lt;ul&gt;
&lt;li&gt;div(block)&lt;/li&gt;
&lt;li&gt;span(inline)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;display
&lt;ul&gt;
&lt;li&gt;block&lt;/li&gt;
&lt;li&gt;inline&lt;/li&gt;
&lt;li&gt;inline-block&lt;/li&gt;
&lt;li&gt;none&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;box-model: content, padding, border, margin&lt;/li&gt;
&lt;li&gt;box-sizing
&lt;ul&gt;
&lt;li&gt;content-box&lt;/li&gt;
&lt;li&gt;border-box&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;position:
&lt;ul&gt;
&lt;li&gt;fixed&lt;/li&gt;
&lt;li&gt;absolute&lt;/li&gt;
&lt;li&gt;relative&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;transform
&lt;ul&gt;
&lt;li&gt;translate&lt;/li&gt;
&lt;li&gt;rotate&lt;/li&gt;
&lt;li&gt;skew&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flexbox&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;main axis/cross axis 的觀念&lt;/li&gt;
&lt;li&gt;flex-direction&lt;/li&gt;
&lt;li&gt;justify-content&lt;/li&gt;
&lt;li&gt;align-item&lt;/li&gt;
&lt;li&gt;align-self&lt;/li&gt;
&lt;li&gt;wrap&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RWD&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;media query&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS framework: Bootstrap&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;flexbox的部分老是看過就忘，名字真的傻傻分不清楚，找機會再做一個類似&lt;a class=&#34;link&#34; href=&#34;https://flexbox.help/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;display: flex (flexbox.help)&lt;/a&gt;的頁面來加深自己的印象好了。&lt;/p&gt;
&lt;h3 id=&#34;terminal-cli&#34;&gt;Terminal (CLI)&lt;/h3&gt;
&lt;p&gt;一些跟file處理相關的指令，先前就有藉由terminal來輸入git指令的經驗，這部分還算得心應手。稍微整理了一下比較就跳到下一個單元去了。&lt;a class=&#34;link&#34; href=&#34;https://victorchao996.gitbook.io/personal-notes/jie-shao-an-zhuang-zhi-ling/command-line-chang-yong-zhi-ling&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;command Line 常用指令 - Victor&amp;rsquo;s 程式開發筆記 (gitbook.io)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;nodejs&#34;&gt;Node.js&lt;/h3&gt;
&lt;p&gt;雖然這是前端挑戰系列，但是全端網頁課程怎麼能沒有後端的部分呢? 以下是主要學習的內容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node是什麼?&lt;/li&gt;
&lt;li&gt;node REPL&lt;/li&gt;
&lt;li&gt;node JS runtime 與 brower的差異&lt;/li&gt;
&lt;li&gt;範例 node 內建模組API : File System, HTTP&lt;/li&gt;
&lt;li&gt;npm(node package manager)&lt;/li&gt;
&lt;li&gt;node_modules 觀念&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;跟者課程的練習時做了一個簡單的node程式&lt;a class=&#34;link&#34; href=&#34;https://github.com/VictorChao996/weird-language-guesser&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;weird-language-guesser&lt;/a&gt;，順便練習npm install &amp;amp; import的動作(&lt;del&gt;雖然功能有點失敗就是了&lt;/del&gt;)&lt;/p&gt;
&lt;h3 id=&#34;express&#34;&gt;Express&lt;/h3&gt;
&lt;p&gt;若要使用node當作後端的server，通常不會使用內建HTTP module，而是使用npm上的package: Express。目前看了一半的內容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;啟用server listen for requests&lt;/li&gt;
&lt;li&gt;根據request 送出相對應的 response&lt;/li&gt;
&lt;li&gt;routing 概念
目前還沒看到EJS的部分，但是看完node.js 與 express 的部分影片讓我對於後端有更深的認識。在這過程中有更加了解瀏覽器送出請求後會發生什麼事，&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mongodb&#34;&gt;mongoDB&lt;/h3&gt;
&lt;p&gt;這一part主要學習的內容是資料庫的觀念，並稍微玩一下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL vs NoSQL&lt;/li&gt;
&lt;li&gt;安裝mongoDB&lt;/li&gt;
&lt;li&gt;下載並使用MongoDB shell&lt;/li&gt;
&lt;li&gt;藉由MongoDB Shell 達到CRUD&lt;/li&gt;
&lt;li&gt;更多的工具: &lt;a class=&#34;link&#34; href=&#34;https://mongoosejs.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mongoose ODM v6.9.1 (mongoosejs.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;光是安裝的部分就花了不少時間QQ。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;這一周也挺瘋狂的，接觸了不少新的觀念，尤其是學習Node真的打開了我的眼界。node解放了JS，使其能在瀏覽器以外的地方運行。另外node內建各種module能讓developer使用，再加上npm的出現，讓開發各種project變得更為容易，這現象從觀察 npm 前幾名package的weekly downloads 能略知一二。這周挑戰文章就先這樣，ㄅㄅ。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第六周-JS事件傳遞委派、貢獻GibHub專案</title>
        <link>https://victorchao996.github.io/p/frontend_learning-sixth-week/</link>
        <pubDate>Sun, 22 Jan 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-sixth-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-sixth-week/JavaScript.jpg" alt="Featured image of post 第六周-JS事件傳遞委派、貢獻GibHub專案" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;本周是寒假的第一周，這周也是比較零散的學習&amp;amp;實作，簡單記錄一下。&lt;/p&gt;
&lt;h2 id=&#34;學習與實作&#34;&gt;學習與實作&lt;/h2&gt;
&lt;h3 id=&#34;1-js-events-傳遞委派&#34;&gt;1. JS Events 傳遞&amp;amp;委派&lt;/h3&gt;
&lt;p&gt;藉由網路影片與文章學習JS events 的進階知識，包括事件的傳遞機制(capturing、target、bubbling)等內容，並從事件傳遞的角度去看&lt;strong&gt;事件委派(event delegation)&lt;/strong&gt; 所能帶來的好處。一開始接觸JS events可能會對events 傳遞的概念有疑問，不過在理解事件委派的概念後反而會覺得事件傳遞的機制設計很厲害，能以更有效率的方式綁定event listener。關於JS 詳細的筆記之後會再整理發布到blog上。&lt;/p&gt;
&lt;h3 id=&#34;2-實際通過pr&#34;&gt;2. 實際通過PR&lt;/h3&gt;
&lt;p&gt;我在學習得過程中偶然找到一個關於HTML best practice的repository: &lt;a class=&#34;link&#34; href=&#34;https://github.com/hail2u/html-best-practices&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hail2u/html-best-practices: For writing maintainable and scalable HTML documents (github.com)&lt;/a&gt;，裡面有著關於HTML最佳實務的.md 檔案，以及對應各種語言的翻譯檔。再看到這個repository的當下我就蹦出了我也許可以為這個文件做翻譯檔的想法，抱著試試看的心情，於是我就clone了repo到電腦上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;翻譯的當下花了不少時間，但一想到我的付出也許能幫助到一些人就給了我繼續的動力&lt;/strong&gt;。儘管有簡體中文的翻譯文件可以參考，但是看完並修改全長1500行的文件也是花了不少時間。抱著忐忑的心情，我送出了第一個正式的PR。&lt;/p&gt;
&lt;p&gt;與上一篇提到repo不同，這次的PR不是CI/CD自動審核的，而是真人審核並同意PR，好在最後成功通過PR，我也成為了該repo的contributor👍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/frontend_learning-sixth-week/firstPR.png&#34;
	width=&#34;1321&#34;
	height=&#34;468&#34;
	srcset=&#34;https://victorchao996.github.io/p/frontend_learning-sixth-week/firstPR_hu62343c65738dc5d6cfc606e3c88cbe49_49884_480x0_resize_box_3.png 480w, https://victorchao996.github.io/p/frontend_learning-sixth-week/firstPR_hu62343c65738dc5d6cfc606e3c88cbe49_49884_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;第一次通過真人接受的PR&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;282&#34;
		data-flex-basis=&#34;677px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在做翻譯的過程中我慢慢地體會到 &lt;strong&gt;&amp;quot; 開源共享、合作 &amp;ldquo;&lt;/strong&gt; 的觀念是多麼的難能可貴，大家無償的投入自己的時間來為這個社會貢獻一份心力。儘管我現在能力不足，還無法參與開源專案的開發，但能力不足者也有能貢獻一己之力的方法，&lt;strong&gt;如: 翻譯文件、尋找專案bug等&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;以上就是本周的學習喇，發現自己本周有大把時間都花在娛樂上了，實屬不應該。不過這儼然成為事實，我也沒辦法，只能將希望放在後面幾周了。下周農曆新年會放假一周，那這周的總結就先這樣。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第五周-JS DOM、PR、GSC</title>
        <link>https://victorchao996.github.io/p/frontend_learning-fifth-week/</link>
        <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-fifth-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-fifth-week/JavaScript.jpg" alt="Featured image of post 第五周-JS DOM、PR、GSC" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;大四上學期的最後一周，雖說部分科目在上星期陸續就考完結束了，但這周仍有考試&amp;amp;部分課堂活動。於是我就趁著空閒的時間去玩一點不一樣的項目。&lt;/p&gt;
&lt;h2 id=&#34;主要學習內容&#34;&gt;主要學習內容&lt;/h2&gt;
&lt;h3 id=&#34;1-js-html-dom&#34;&gt;1. JS HTML DOM&lt;/h3&gt;
&lt;p&gt;在學習框架的過程中才發現自己對於DOM 的原理與操作不是很熟悉，於是就找了一些教材&amp;amp;影片打算將此遺漏的知識點給補齊。&lt;/p&gt;
&lt;h4 id=&#34;介紹&#34;&gt;介紹&lt;/h4&gt;
&lt;p&gt;根據MDN web docs上對於DOM的解釋:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;Document Object Model&lt;/strong&gt; (&lt;em&gt;DOM&lt;/em&gt;) is the data representation of the objects that comprise the structure and content of a document on the web.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;簡單來說DOM就是將HTML文件內的各個element都定義成物件，而這些物件會形成的一個具有階層關係的&lt;strong&gt;樹狀結構&lt;/strong&gt;。而JS可以透過DOM來改變HTML文件的內容。&lt;/p&gt;
&lt;h4 id=&#34;常見dom操作&#34;&gt;常見DOM操作&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;新增/刪除 element&lt;/li&gt;
&lt;li&gt;更改element 的內容(text、HTML)&lt;/li&gt;
&lt;li&gt;更改element的屬性(Attribute、Classes、CSS styles等)&lt;/li&gt;
&lt;li&gt;對於HTML events做出反應&lt;/li&gt;
&lt;li&gt;新增HTML events&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;常見-methods--property&#34;&gt;常見 Methods &amp;amp; Property&lt;/h4&gt;
&lt;h5 id=&#34;addingdeleting&#34;&gt;Adding/Deleting&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;document.createElement(element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.removeChild(element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.appendChild(element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.appendChild(element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.replaceChild(new, old)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.write(text)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;finding&#34;&gt;Finding&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;document.getElementById()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.getElementByClassName()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.getElementByTagName()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;document.querySelector()&lt;/code&gt;&lt;/strong&gt; : 選擇第一個符合的Element&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.querySelectorAll()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;changing&#34;&gt;Changing&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;element.innerHTML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;element.attribute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;element.style.property&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;element.setAttribute()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;dom-traversal-selecting&#34;&gt;DOM Traversal (selecting)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Children (下一代): `children()&lt;/li&gt;
&lt;li&gt;Descendants(孫子後)&lt;/li&gt;
&lt;li&gt;parents (上一代): &lt;code&gt;parentElement()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Ancestors(祖先): &lt;code&gt;closest()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sibling(同輩): &lt;code&gt;nextElementSiblings()&lt;/code&gt;、&lt;code&gt;previousElementSiblings&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了以上不同的method就可以在JS中對HTML文件進行修改，以下為歸納出的步驟:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尋找(Finding/DOM traversal)-&amp;gt;更換內容(Changing)&lt;/li&gt;
&lt;li&gt;尋找-&amp;gt;建立(Adding)&lt;/li&gt;
&lt;li&gt;尋找-&amp;gt;建立Event Listener&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;範例&#34;&gt;範例:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;container&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;story&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set-text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;&amp;gt;Set text content&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clear-text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;&amp;gt;Clear text content&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;story&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.story&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setText&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#set-text&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setText&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;, ()=&amp;gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;story&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;textContent&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;It was a dark and stormy night...&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clearText&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#clear-text&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;clearText&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;, () =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;story&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;textContent&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因為DOM操作涉及到 JavaScript events相關的內容，此時我才發現自己對於event的學習還不夠深入。目前僅知道click, mouse, keyboard等事件類別，對於events進階的觀念 等還不夠熟悉，這之後的坑要等到下星期再補齊了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-github-pr&#34;&gt;2. GitHub PR&lt;/h3&gt;
&lt;p&gt;本周學習的第二重點項目，gitHub 的 pull request。先前對gitHub的使用都只把它當作個人的程式碼備份平台，上傳練習時的程式碼。然而gitHub真正出名的地方在於可以&lt;strong&gt;與其他人協作專案，結合git 版控實現真正的多人協作&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;協作經驗&#34;&gt;協作經驗&lt;/h4&gt;
&lt;p&gt;先前與他人協作開發的經驗包括使用Unity Collaborate、Gitea等，前者是Unity遊戲引擎編輯器的內建合作工具，後者則是基於git 版控工具的協作雲端平台(類似GitHub)。&lt;/p&gt;
&lt;p&gt;前者因為專案主要的開發項目在我的本地端，所以沒有到太大的問題。而後者則是同一個專案中的不同部分由兩三個人去做開發(也就是沒有一端維護主要的程式碼)。&lt;/p&gt;
&lt;h4 id=&#34;檔案覆蓋問題&#34;&gt;檔案覆蓋問題&lt;/h4&gt;
&lt;p&gt;在開發的初期原先有規劃好說不去碰特定資料夾中的內容，避免merge時會有問題，然而意外卻還是不小心發生了。因為Unity專案中的資料與遊戲素材多又雜，導致我在清理檔案的時候不小心誤觸了開發資料夾以外的素材檔。當時的情況是&lt;strong&gt;我誤刪了資料夾以外的資源檔案(地形檔)&lt;/strong&gt;，再加上我不小心把雲端的資料給覆蓋過去(不清楚為何能Push上雲端，也許是用了force指令?)，&lt;strong&gt;導致另一人開發的關卡地形消失&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;鬧出了這麼大的鍋，好在最後經由Git將專案回朔到出事之前的版本才解決了版本不合的問題。在本周了解PR是怎麼一回事之後才發現，如果當初有學過這個操作，那是否就能避免檔案覆蓋的問題了呢?&lt;/p&gt;
&lt;h4 id=&#34;pr的作用&#34;&gt;PR的作用&lt;/h4&gt;
&lt;p&gt;當協作者想要將本地端的內容整合到雲端repo時，git push後會發送通知，&lt;strong&gt;請求(Request)該repo的原作做拉(pull)的動作&lt;/strong&gt;，所以叫做Pull Request。&lt;/p&gt;
&lt;p&gt;這麼做的好處是可以&lt;strong&gt;避免其他協作者直接覆蓋檔案&lt;/strong&gt;，且原作在收到PR後可以&lt;strong&gt;比對程式碼並做審核的動作&lt;/strong&gt;，而每一次PR提交都會有紀錄可以做為追蹤。&lt;/p&gt;
&lt;h4 id=&#34;第一次pr&#34;&gt;第一次PR&lt;/h4&gt;
&lt;p&gt;為了做PR的練習，我找了gitHub上的一個名為[first-contributions](&lt;a class=&#34;link&#34; href=&#34;https://github.com/firstcontributions/first-contributions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;firstcontributions/first-contributions: 🚀✨ Help beginners to contribute to open source projects (github.com)&lt;/a&gt;)的Public Repo，他的ReadMe.md文件上有詳細的PR教學，造著說明一步一步做即可。我將其歸納為以下幾步:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;fork 其他人的repo&lt;/li&gt;
&lt;li&gt;clone repo到本地進行修改&lt;/li&gt;
&lt;li&gt;本地修改(通常會另開branch)，並commit&lt;/li&gt;
&lt;li&gt;push 到自己的gitHub repo上&lt;/li&gt;
&lt;li&gt;提交PR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原作者同意PR(將你的branch整合到他repo的branch上)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根據以上的步驟，我完成了第一次的PR，也成為了該repo的contributor !&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-google-analytics-與-google-search-console&#34;&gt;3. Google Analytics 與 Google Search Console&lt;/h3&gt;
&lt;h4 id=&#34;搜尋&#34;&gt;搜尋???&lt;/h4&gt;
&lt;p&gt;先前架設好這個Blog後我就一直在想，既然有辦法透過URL連結到此網站，那能不能被Google 搜尋到呢? 出於好奇搜索了一遍，無奈的是即使下了很精確的關鍵字仍然沒有顯示在搜尋結果中。&lt;/p&gt;
&lt;p&gt;後來爬了一些網路文章後才得知網站要被google收錄需要一段時間，但等不及的我於是上網找了能盡快被收錄的方法，也就是&lt;strong&gt;主動向google登陸我的blog網站&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;gsc驗證&#34;&gt;GSC驗證&lt;/h4&gt;
&lt;p&gt;登陸的方法就是在Google Search Console上&lt;strong&gt;驗證網站，並且提交sitemap.xml&lt;/strong&gt;，能讓網站早一點被收錄。google search console的驗證方法有很多種，而我很意外的選擇採用 &lt;strong&gt;Google Analytics驗證&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;通過驗證的方法就是將GA提供的一段HTML標記給放到網站的&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;之間，這樣GA就能驗證網站是否有被登錄。再花了不少時間後才將HTML標記給放到靜態網站建置的網頁中，也順利地通過GA的驗證。&lt;/p&gt;
&lt;p&gt;有了GA的驗證後，GSC的驗證也順利地通過，最後一步就是等待提交的sitemap被處理。當過程順利完成後，在google 搜尋引擎中輸入 &lt;strong&gt;site: 網址名&lt;/strong&gt; 即可在搜尋引擎中看到個人網站的連結。&lt;/p&gt;
&lt;h4 id=&#34;結果&#34;&gt;結果&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/frontend_learning-fifth-week/googleSearch1.png&#34;
	width=&#34;1272&#34;
	height=&#34;697&#34;
	srcset=&#34;https://victorchao996.github.io/p/frontend_learning-fifth-week/googleSearch1_huac020af9265fd3b37ceba596bb5b1f34_105565_480x0_resize_box_3.png 480w, https://victorchao996.github.io/p/frontend_learning-fifth-week/googleSearch1_huac020af9265fd3b37ceba596bb5b1f34_105565_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;成功在google search engine中搜尋到網站&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;437px&#34;
	
&gt;
&lt;img src=&#34;https://victorchao996.github.io/p/frontend_learning-fifth-week/googleSearch2.png&#34;
	width=&#34;1213&#34;
	height=&#34;727&#34;
	srcset=&#34;https://victorchao996.github.io/p/frontend_learning-fifth-week/googleSearch2_hu0aee665aa9f59d0f27a91d58cfd67768_98419_480x0_resize_box_3.png 480w, https://victorchao996.github.io/p/frontend_learning-fifth-week/googleSearch2_hu0aee665aa9f59d0f27a91d58cfd67768_98419_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;直接搜尋網站的title，綜合排名在第二名的位置😮。&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;166&#34;
		data-flex-basis=&#34;400px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我後來才發現GSC提供的驗證方法之一就包含在網站&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;中嵌入HTML標記的方式，只不過我意外地透過GA去驗證了GSC。結果就是我不僅完成了&lt;strong&gt;網站的被搜尋功能，也順道完成了網站串聯GA分析&lt;/strong&gt;😂。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/frontend_learning-fifth-week/googleAnalytics.png&#34;
	width=&#34;1092&#34;
	height=&#34;813&#34;
	srcset=&#34;https://victorchao996.github.io/p/frontend_learning-fifth-week/googleAnalytics_hubdfea1cbeb05fa4aa977af2c6a5bcae9_61691_480x0_resize_box_3.png 480w, https://victorchao996.github.io/p/frontend_learning-fifth-week/googleAnalytics_hubdfea1cbeb05fa4aa977af2c6a5bcae9_61691_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Google Analytics網站數據分析截圖&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;134&#34;
		data-flex-basis=&#34;322px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;結語&#34;&gt;結語&lt;/h2&gt;
&lt;p&gt;這一周的學習內容並沒有著重在特定的主題，完全是興趣使然的結果，而我也在找尋資料並實作的過程中能慢慢地體會到&lt;strong&gt;做中學的快樂&lt;/strong&gt; 。若是未來的學習過程都能如此有趣的話，那每天額外花個3小時專研技術根本就不是問題，畢竟是有趣的對吧?&lt;/p&gt;
&lt;p&gt;以上就是前端學習第五周的內容，下周開始是寒假的第一周，時間會充裕許多，我也能有更多的時間可以做學習，好好的充實自己。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;參考資料:
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gideonwolfe.com/posts/sysadmin/hugo/hugogoogleanalytics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Adding Google Analytics to your Hugo Site :: Gideon Wolfe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://digitaldrummerj.me/hugo-google-analytics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo - Add Google Analytics | Justin James (digitaldrummerj.me)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.shopjkl.com/pages/ga&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2021經典版Google Analytics教學 教你看懂GA＆活用GA (shopjkl.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.seo-tea.com/google-search-console-tutorial/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【完整指南】2022 Google Search Console教學(附索引問題處理) - SEO分解茶 (seo-tea.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>第四周-vue基礎</title>
        <link>https://victorchao996.github.io/p/frontend_learning-fourth-week/</link>
        <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-fourth-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-fourth-week/JavaScript.jpg" alt="Featured image of post 第四周-vue基礎" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;上週學習的內容主要是Vue框架的基礎，在學習入門的過程(包含看書本、看教學影片、官方教學、文件等)時發現自己對於原生JS還不夠熟悉，以至於沒有辦法有效率的學習框架，或體會到使用前端框架的好處。僅能從其他人的介紹中得知使用Vue框架的一些好處。&lt;/p&gt;
&lt;p&gt;雖然看了許多基礎內容，但有鑑於現階段學習Vue 會遇到相對尷尬的問題就是Vue 2 &amp;amp; Vue 3的不同。並且Vue 3 新增的Composition API 寫法又會使得跟著網路教材學習起來相對不太容易。有鑑於版本&amp;amp;不同的API風格，以下就整理一些Vue的共通觀念。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;主要學習內容&#34;&gt;主要學習內容&lt;/h2&gt;
&lt;h3 id=&#34;mvvm-架構&#34;&gt;MVVM 架構&lt;/h3&gt;
&lt;p&gt;以前有聽過MVC架構，也就是model-view-controller，是一種將應用程式分割成三種不同邏輯元件的&lt;strong&gt;設計模式&lt;/strong&gt;，有助於專案的協作開發。而不同的MVC架構，Vue參考了MVVM架構的設計，那什麼是MVVM架構?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://victorchao996.github.io/p/frontend_learning-fourth-week/mvvm.png&#34;
	width=&#34;1600&#34;
	height=&#34;850&#34;
	srcset=&#34;https://victorchao996.github.io/p/frontend_learning-fourth-week/mvvm_hud42b3306f5891f5e1c1e0cd5099ec400_43685_480x0_resize_box_3.png 480w, https://victorchao996.github.io/p/frontend_learning-fourth-week/mvvm_hud42b3306f5891f5e1c1e0cd5099ec400_43685_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Vue MVVM 架構圖&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;451px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;MVVM為&lt;strong&gt;model-view-viewmodel&lt;/strong&gt;的縮寫，這三者分別代表不同的邏輯元件。對應到網頁開發可以將其整理成一下的重點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Model:
&lt;ul&gt;
&lt;li&gt;資料處理&lt;/li&gt;
&lt;li&gt;Plain JavaScript Object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;View:
&lt;ul&gt;
&lt;li&gt;網頁畫面&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;View Model
&lt;ul&gt;
&lt;li&gt;實現DOM Listener&lt;/li&gt;
&lt;li&gt;實現 Data Bindings&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vue的核心功能就是扮演View model的角色，經由宣告式(聲明式)的渲染就可以不用親自的操作DOM。藉由Vue能使工程師更專注於UI &amp;amp; Data的在網頁上的呈現，並且程式邏輯能更專注於data的處理，而不是在思考要如何操作DOM。&lt;/p&gt;
&lt;h3 id=&#34;vue的特殊語法&#34;&gt;Vue的特殊語法&lt;/h3&gt;
&lt;p&gt;vue有兩種特殊的語法用於幫助程式設計師撰寫比起原生JS更簡潔的&amp;amp;更有效率的執行程式 &lt;strong&gt;(借助Virtual DOM的力量)&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;插植語法&#34;&gt;插植語法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;功能: 用於解析&lt;strong&gt;標籤體內的內容&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;寫法: &lt;code&gt;{{ }}&lt;/code&gt; ，用於接收data中的所有屬性&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;v-指令語法&#34;&gt;v-指令語法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;功能: 用於解析標籤(標籤屬性、綁定事件)&lt;/li&gt;
&lt;li&gt;例: &lt;code&gt;&amp;lt;v-bind:href=&amp;quot;url&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中插植語法提供了顯示單向綁定(data-&amp;gt;UI)的功能，而使用v-指令語法則可以具有各種綁定功能(雙向綁定、事件綁定、樣式綁定、條件渲染等)&lt;/p&gt;
&lt;h3 id=&#34;常見v-指令&#34;&gt;常見V-指令&lt;/h3&gt;
&lt;p&gt;善用v-指令可以大大的降低程式碼的長度，下面整理了一些基礎常見的v-指令。&lt;/p&gt;
&lt;h4 id=&#34;v-bind&#34;&gt;v-bind&lt;/h4&gt;
&lt;p&gt;使用插植語法可以很方便地將data屬性中的資料(Options API) 或 ref( )與reactive()的資料(Composition API)的資料應用在HTML tag的內容中。但插植語法卻沒有辦法在HTML tag 的attribute上，有鑑於此，Vue提供了v-bind指令，可以將data用於屬性上。&lt;/p&gt;
&lt;p&gt;利用v-bind指令即可實現動態調整CSS樣式或tag屬性。
範例: 動態指定image URL&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-bind:src&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;url&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./image.png&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;因為太常用所以Vue提供的簡寫，例如下面兩者寫法是一樣的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-bind:src&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;url&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:src&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;url&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;v-on&#34;&gt;v-on&lt;/h4&gt;
&lt;p&gt;vue也提供了綁定事件的指令v-on，以下為最簡單的事件範例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-on:click&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;doThis&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這時有些人可能會想，那這樣不就跟原來將onclick寫在HTML上面無差別嗎?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;doThis&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;舊的寫法將綁定事件寫死在HTML標籤中，相較於將HTML與JS分開的寫法&lt;strong&gt;缺乏彈性與可變性&lt;/strong&gt;，於是之後就藉由DOM來綁定事件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;btn&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(.&lt;span style=&#34;color:#a6e22e&#34;&gt;btnclass&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//事件綁定方法一
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;btn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onclik&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//事件綁定方法二: 使用addEventListener
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;btn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;functoin&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;preventDafult&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;雖然分開HTML &amp;amp; JS 有諸多好處，但vue提出的component概念的主要目的為減少DOM的操作，且希望開發者能藉由觀看&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;就明白UI 介面&amp;amp;事件觸發的關係，於是就產生了類似在HTML上指定屬性的寫法。不過v-on的好處是提供了JS event相關常用的修飾子。例如上面的btn事件綁定可以寫成:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-on:click.prevent&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;fun&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;處此之外還有&lt;code&gt;.stop&lt;/code&gt; &lt;code&gt;.once&lt;/code&gt; &lt;code&gt;.capture&lt;/code&gt; 等與 JS event機制有關的設定。&lt;/p&gt;
&lt;p&gt;因為事件綁定很常用所以vue也提供了縮寫符號: @&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@click.prevent&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;fun&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@keyup.enter&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;onEnter&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-on&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;{ mousedown: doThis, mouseup: doThat }&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;可以使用在component上&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;MyComponent&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@my-event&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;handleThis&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;v-ifv-show&#34;&gt;v-if/v-show&lt;/h4&gt;
&lt;p&gt;vue提供了條件渲染指令，可以根據指定的value來決定是否要渲染template到頁面上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;範例:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-if&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;isShow&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-show&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;isShow&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-show&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;兩個指令所達到的效果都是控制元素是否出現在畫面上，然而他們實作的方法不同，&lt;strong&gt;前者是會直接移除HTML element，後者則是使用CSS屬性來隱藏&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;兩者使用情況比較如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;v-if
&lt;ul&gt;
&lt;li&gt;可搭配&lt;code&gt;v-else-if&lt;/code&gt;, &lt;code&gt;v-else&lt;/code&gt; 使用&lt;/li&gt;
&lt;li&gt;適用結果幾乎不變的情況，以此降低browser的渲染&amp;amp;DOM生成成本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;v- show
&lt;ul&gt;
&lt;li&gt;適用DOM狀態需要被保留的情況&lt;/li&gt;
&lt;li&gt;適用DOM狀態會頻繁更動的情況&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;v-for&#34;&gt;v-for&lt;/h4&gt;
&lt;p&gt;除了一般的條件渲染，vue也提供了方便列表渲染的指令。可以讓開發者以更簡便&amp;amp;直觀的方式撰寫template(HTML)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;範例1: 根據reactive data來渲染HTML&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;item in arr&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;範例2: 條列顯示物件(Object) 資料&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-for&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;(item, index) in arr&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; }} &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt; {{&lt;span style=&#34;color:#a6e22e&#34;&gt;item&lt;/span&gt;}}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;有了v-for指令就能&lt;strong&gt;減少手動更新list的data &amp;amp; 更新畫面的步驟&lt;/strong&gt;(繁複的DOM 操作)，讓開發者能更專注在data 與 UI 的關係上。&lt;/p&gt;
&lt;h4 id=&#34;v-model&#34;&gt;v-model&lt;/h4&gt;
&lt;p&gt;最後也是最重要的雙向綁定指令，在高互動性的網頁中，表單類型的元素是不可或缺的(例: &lt;code&gt; &amp;lt;input&amp;gt; 、&amp;lt;textarea&amp;gt; 、&amp;lt;select&amp;gt;&lt;/code&gt;等)。不同於v-bind只能實現單向綁定，v-model實現了真正的雙向綁定，不過它本質上是一種語法糖。&lt;/p&gt;
&lt;p&gt;範例: 當在輸入框中打字，下方文字會立即更新。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-model&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {{ &lt;span style=&#34;color:#a6e22e&#34;&gt;Value&lt;/span&gt; }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;template&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;ref&lt;/span&gt;} &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ref&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;v-model 指令語法糖本質上就是v-bind &amp;amp; v-on 指令做結合使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-vue&#34; data-lang=&#34;vue&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//兩者本質上相等
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;v-model&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;msg&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-bind:value&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&amp;#34;msg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-on&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;msg = $event.target.value&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;實際上v-model在做的事情就是上面提到的MVVM架構中的ViewModel。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;結語&#34;&gt;結語&lt;/h2&gt;
&lt;p&gt;以上就是一些簡單的關於vue基礎知識的總結。在學習的過程中發現自己對原生 JS 不是說到非常熟悉，以至於在學習有關event的內容是會卡住。也因為還不熟悉JS 事件&amp;amp;事件處理的精隨，以至於無法深刻體會Vue 中 v-指令帶來的好處。&lt;/p&gt;
&lt;p&gt;現在清楚明白自己JS的基礎知識還讀的不夠深入，我認為目前不太適合繼續學習Vue相關的知識。所以下面幾周的學習內容應該會著重在&lt;strong&gt;JS 進階 &amp;amp; Web API 相關的知識&lt;/strong&gt;去做學習。&lt;/p&gt;
&lt;p&gt;圖片來源: [MVVM] &lt;a class=&#34;link&#34; href=&#34;https://v1-cn.vuejs.org/guide/overview.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://v1-cn.vuejs.org/guide/overview.html&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第三周-初探Vue框架</title>
        <link>https://victorchao996.github.io/p/frontend_learning-third-week/</link>
        <pubDate>Sun, 25 Dec 2022 18:00:00 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-third-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-third-week/JavaScript.jpg" alt="Featured image of post 第三周-初探Vue框架" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;第二周紀錄的主要學習內容是JavaScript的基礎&amp;amp;進階概念，而本周主要的學習內容是認識框架(Vue.js)。&lt;/p&gt;
&lt;p&gt;在前端框架三支柱中(Angular、React、Vue)為什麼會選擇Vue來做學習呢? 其實是看中Vue框架主打的&lt;strong&gt;輕便性&lt;/strong&gt;，另外也聽說官方文件易於閱讀學習，於是就果斷選擇Vue來入門。&lt;/p&gt;
&lt;h3 id=&#34;三大框架簡單比較&#34;&gt;三大框架簡單比較&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Angular:
&lt;ul&gt;
&lt;li&gt;由Google support&lt;/li&gt;
&lt;li&gt;各種功能完善，相對的學習曲線較高&lt;/li&gt;
&lt;li&gt;需使用TypeScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;React:
&lt;ul&gt;
&lt;li&gt;由Facebook(Meta) support&lt;/li&gt;
&lt;li&gt;使用JSX&lt;/li&gt;
&lt;li&gt;需要接觸第三方插件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vue:
&lt;ul&gt;
&lt;li&gt;由Vue團隊support&lt;/li&gt;
&lt;li&gt;使用HTML寫法&lt;/li&gt;
&lt;li&gt;SFC將 HTML、JavaScript、CSS分開&lt;/li&gt;
&lt;li&gt;漸進式框架&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;主要學習內容&#34;&gt;主要學習內容&lt;/h2&gt;
&lt;h3 id=&#34;為何要使用框架&#34;&gt;為何要使用框架?&lt;/h3&gt;
&lt;p&gt;傳統網站開發使用HTML、CSS、JavaScript 將網站的骨架、樣式、邏輯控制分開的寫法在小型的網站上還能應付，然而當網站的架構逐漸擴大，&lt;strong&gt;開發維護&lt;/strong&gt;上就會產生各種各樣的問題。&lt;/p&gt;
&lt;h4 id=&#34;網站互動元素開發&#34;&gt;✒️網站互動元素開發&lt;/h4&gt;
&lt;p&gt;原先使用JavaScript操作DOM的方法很不直觀，儘管後來有出現 jQuery 可以使開發者有更完善與簡潔的方法來達成網頁元素的互動，但部分項目仍然會頻繁的操作DOM。而Vue採用&lt;strong&gt;模板語法&lt;/strong&gt;的方式&amp;amp;監聽特定節點的值(&lt;strong&gt;宣告式渲染&lt;/strong&gt;)來代替開發者實際操作DOM，可使開發者在開發複雜的互動UI時更加直觀。&lt;/p&gt;
&lt;h4 id=&#34;效能優化&#34;&gt;✒️效能優化&lt;/h4&gt;
&lt;p&gt;開發者藉由JavaScript DOM API 可以操作&amp;amp;更改網頁的HTML元素，但操作DOM會增加網頁渲染的成本(Repaint or Reflow)，使得網頁效能較差。&lt;/p&gt;
&lt;p&gt;因為這個理由，Vue使用了&lt;strong&gt;Virtual DOM&lt;/strong&gt; 的概念。利用JavaScript物件紀錄現有的DOM結構，當資料狀態改變的時候建立Virtual DOM 與新的DOM結構，再利用演算法分析兩個DOM差異, 最後再根據紀錄來執行渲染的函式，完成實體DOM的更新。&lt;/p&gt;
&lt;p&gt;Virtual DOM 的概念可以避免網頁效能低落。&lt;/p&gt;
&lt;h4 id=&#34;組件化ui&#34;&gt;✒️組件化UI&lt;/h4&gt;
&lt;p&gt;在現代複雜的網頁開發中，網站可能會重複出現元素(卡片畫面、按鈕、表格等)，將重複的元素寫成一個 &lt;strong&gt;組件(component)&lt;/strong&gt; 能使得專案較易於開發&amp;amp;維護。&lt;/p&gt;
&lt;p&gt;Vue中的SFC(single file component)中分為三個部分: 
&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 分別對應HTML、JavaScript、CSS 。 當定義好組件的內容後，透過import 的方式就可以&lt;strong&gt;重複使用組件&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;vue-的特色&#34;&gt;Vue 的特色&lt;/h3&gt;
&lt;p&gt;再了解為何要使用框架並選擇學習Vue後，不免俗的要來介紹Vue的特色。理解框架的特色&amp;amp;使用情境對於學習Vue有很大的幫助。&lt;/p&gt;
&lt;h4 id=&#34;採用宣告式渲染&#34;&gt;⭐採用宣告式渲染&lt;/h4&gt;
&lt;p&gt;比起原生JavaScript 藉由DOM來更新UI的方法(指令式宣告)，Vue採用宣告式渲染(Declarative Rendering),
能讓開發者能更專注在UI &amp;amp; 資料的關係上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Counter範例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;createApp&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vue&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createApp&lt;/span&gt;({ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;() { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	  &lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;mount&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;count++&amp;#34;&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Count is: {{ count }} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;響應式ui&#34;&gt;⭐響應式UI&lt;/h4&gt;
&lt;p&gt;Vue會自動追蹤JavaScript的state，並且有效率的更新DOM。&lt;/p&gt;
&lt;h4 id=&#34;漸進式框架&#34;&gt;⭐漸進式框架&lt;/h4&gt;
&lt;p&gt;Vue的&lt;strong&gt;核心只關注在View layout的呈現&lt;/strong&gt;，並提供minimal且必要的功能給使用者。隨者開發上的需求的增加，可以再&lt;strong&gt;引入其他的函式庫或工具&lt;/strong&gt;來處理各種功能，例如: vue-router處理前端路由、vuex的狀態管理等。&lt;/p&gt;
&lt;h4 id=&#34;單檔案組件sfc&#34;&gt;⭐單檔案組件SFC&lt;/h4&gt;
&lt;p&gt;Vue支援以.vue為副檔名的檔案來定義一個完整的組件，SFC能清楚地將架構與組件的關係給分割。在複雜的專案中，SFC能有更高的可讀性&amp;amp;重複使用性。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;這周的內容就先整理到這邊，雖然有稍微玩了一下vue特有的各種神奇指令(v-bind、v-model等)，但我想先把重點整理過在打成文章。另外，我總覺得應該要分別用原生JS &amp;amp; Vue來製作一個小的專案後(例如ToDo app 之類的)，才能更加理解前端開發上使用框架的好處。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第二周-JavaScript基礎&amp;進階</title>
        <link>https://victorchao996.github.io/p/frontend_learning-second-week/</link>
        <pubDate>Sun, 18 Dec 2022 18:00:00 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-second-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-second-week/JavaScript.jpg" alt="Featured image of post 第二周-JavaScript基礎&amp;進階" /&gt;&lt;h2 id=&#34;挑戰破功&#34;&gt;挑戰破功?&lt;/h2&gt;
&lt;p&gt;上週因為在準備AppWors School Campus Program 面試的關係就沒有出文章(&lt;del&gt;挑戰才剛開始就失敗&lt;/del&gt;)，這周要好好來惡補一下進度。在前端學習的部分並沒有實際的計畫學習的內容，只有根據不熟的方面加減看一下。&lt;/p&gt;
&lt;p&gt;這兩周課餘時間主要集中在JavaScript 進階 與 前端框架Vue 的學習，關於學習的內容我會拆成好幾篇來發。雖然希望可以忠實的呈現每一週的學習內容，但礙於時間比較零散，再加上單純紀錄容易變成流水帳，所以之後的學習內容重點整理可能會跨周分享。&lt;/p&gt;
&lt;p&gt;希望學習紀錄&amp;amp;重點筆記的比例能各站50%這樣。&lt;/p&gt;
&lt;h2 id=&#34;主要學習內容&#34;&gt;主要學習內容&lt;/h2&gt;
&lt;h3 id=&#34;javascript-基礎&#34;&gt;JavaScript 基礎&lt;/h3&gt;
&lt;p&gt;程式語言共有的基礎知識: 變數、陣列、迴圈、條件判斷式、function都大同小異，這方面沒什麼太大的問題，比較特別的是JavaScript的資料型別還分為六種基本(primitives) &amp;amp; Object，而最重要的就是Object.&lt;/p&gt;
&lt;h4 id=&#34;object&#34;&gt;Object&lt;/h4&gt;
&lt;p&gt;學習 Object 對完整了解 JavaScript 來說非常重要，在JavaScript中幾乎所有東西都可以是Object 。Object由 property(name) &amp;amp; Value 組成，可對應至其他程式語言中的 key-value pair 結構，如: Python 中的 Dictionaries、C 中的 Hash tables。因為其內容是由屬性(property)&amp;amp;值(value)所組成，具有易於閱讀的和處理的優勢，於是後來就設計出鼎鼎大名的JSON格式 (JavaScript Object Notation)。&lt;/p&gt;
&lt;p&gt;網路應用的資料傳輸通常使用JSON格式，例如: server端傳送網頁資源到client端，client端瀏覽器再根據接收到的渲染網頁。了解JSON格式並熟悉&amp;quot;解析&amp;amp;字串化&amp;quot;能使之後學習使用 Fetch API 時更加容易。&lt;/p&gt;
&lt;h3 id=&#34;javascript-進階&#34;&gt;JavaScript 進階&lt;/h3&gt;
&lt;p&gt;跟隨w3school官網的JS教學看看，並把Youtube上的進階教學影片看過一遍，這些主題是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nested Funtion&lt;/li&gt;
&lt;li&gt;Closure&lt;/li&gt;
&lt;li&gt;this keyword&lt;/li&gt;
&lt;li&gt;Class&lt;/li&gt;
&lt;li&gt;Asynchronous JavaScript
&lt;ul&gt;
&lt;li&gt;Timeouts and Interval&lt;/li&gt;
&lt;li&gt;Callbacks&lt;/li&gt;
&lt;li&gt;Promise&lt;/li&gt;
&lt;li&gt;async &amp;amp; await&lt;/li&gt;
&lt;li&gt;Event Loop&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Function 的進階應用對我來說是很新的觀念，像是&lt;strong&gt;nested function &amp;amp; Closure&lt;/strong&gt;都是之前寫過的程式語言中沒有接觸過的概念。 &amp;ldquo;使用Closure達到funtion中的private variable 這件事&amp;quot;對於本身是從較為嚴謹的C++作為入門程式語言的我來說感到不可思議，因為這牽扯到var關鍵字所建立的變數是function scope，與其他語言的block scope不同。&lt;/p&gt;
&lt;p&gt;另一個奇妙的點是通常function內的local 變數只會在function執行期間 &amp;ldquo;存在&amp;rdquo; ，然而 JavaScript  Closure的概念使得當nested function中 外部的function被invoked時，&lt;strong&gt;該function 的 lexical enviroment 都會被建立&amp;amp;保留&lt;/strong&gt;，而local variable就包含在此lexical enviroment中。同一個function closure所形成的不同變數(常數)就具有不同的lexical enviroment，根據這個特性就可以達到類似OOP的概念。&lt;/p&gt;
&lt;p&gt;除了function的新概念外，還包含this 關鍵字。若是從其他OOP(物件導向)語言轉過來學習JavaScript的人肯定會被this的概念混淆。this根據invoke的時機會有&lt;strong&gt;各種不同的結果&lt;/strong&gt;，不過我也沒有仔細研究一遍，唯一能確定的是 (&lt;del&gt;很多人都很困惑&lt;/del&gt; )關於this的討論會另外寫成一篇文，在這邊就先不討論。&lt;/p&gt;
&lt;h3 id=&#34;asynchronous-javascript&#34;&gt;Asynchronous JavaScript&lt;/h3&gt;
&lt;p&gt;JavaScript另一個重要的進階主題是&lt;strong&gt;同步&amp;amp;非同步&lt;/strong&gt;程式。
程式初學者學到的程式執行順序: 一行一行，從上而下，依序執行 就是最常見的synchronous程式。這類程式雖然直觀，但是當某一行指令或某一個function執行的時間較長時，就會使得程式阻塞(blocking)。但在Event 很多的網頁應用中，我們當然不希望網頁當掉或是某一個Button 按下去沒反應，因此就有了&lt;strong&gt;Asynchronous 非同步&lt;/strong&gt;的概念。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;註: JavaScript 本身是synchronous、Blocked、single-thread language。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;timeouts--intervals&#34;&gt;Timeouts &amp;amp; Intervals&lt;/h4&gt;
&lt;p&gt;藉由&lt;strong&gt;Web API&lt;/strong&gt; 提供的Timeout method我們可以實現類似asynchronous的效果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;world\n&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;setTimeout( )&lt;/code&gt; 可以讓function在經過特定時間後才執行，而且在等待的時間內不會阻擋到後面程式碼的執行。&lt;code&gt;setInterval( )&lt;/code&gt; 也是類似的觀念，不過會持續執行直到程式結束或interval被取消。&lt;/p&gt;
&lt;p&gt;這邊需要特別注意&lt;strong&gt;等待時間是minimum delay 而不是guaranteed delay&lt;/strong&gt;(這牽扯到Web API 與 JavaScript底層的運作)，所以即使寫成 &lt;code&gt;setTimeout(fun, 0)&lt;/code&gt; 也不能保證function會馬上執行。&lt;/p&gt;
&lt;h4 id=&#34;callbacks&#34;&gt;Callbacks&lt;/h4&gt;
&lt;p&gt;callback如果單看中文翻譯名稱可能比較難懂，簡單來說就是一個函式接受另一個函式當作參數傳入，這麼做的好處就是可以讓函式控制參數函式的執行時機。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;案例一&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;First&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Fn&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;Fn&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;First&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//執行結果:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//1 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這時候很多人可能會想，那為何不直接寫成這樣就好?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;First&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;Fn&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;First&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//執行結果與上相同
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;雖然執行結果相同，但問題是當First Function的執行時間較長時會造成程式Block，而使用&lt;code&gt;setTimeout()&lt;/code&gt; 又會造成順序不對(&lt;code&gt;Second()&lt;/code&gt;先執行)。將函式寫成Callback的形式就可以搭配&lt;code&gt;setTimeout()&lt;/code&gt; 使用，&lt;strong&gt;進而確保程式在非同步執行的情況下，順序是對的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Callback雖然方便使用，但是當有過多的callback function會造成複雜的巢狀結構，使得程式碼變得&lt;strong&gt;不易閱讀&amp;amp;維護&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fetchCurrentUser&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/user`&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fetchFollowersByUserId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/followers/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;fetchFollowerInterests&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/interests/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;interstId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;//直到取得需要的資源.....
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;，進而造成&lt;strong&gt;Callback Hell&lt;/strong&gt;。
為了避免callback hell於是後來又延伸出Promise的概念。&lt;/p&gt;
&lt;h4 id=&#34;promises&#34;&gt;Promises&lt;/h4&gt;
&lt;p&gt;promise 是一個可以有不同狀態的JavaScript Object，分別是&lt;strong&gt;pending, fulfilled, rejected&lt;/strong&gt;，我們可以依據不同的狀態來處理asynchronous code。Promise最大的用處是他提供&lt;code&gt;.then()&lt;/code&gt; 與 &lt;code&gt;.catch()&lt;/code&gt; 等method，而這兩者的回傳值皆為promise，可以方便地進行 &lt;em&gt;鍊式調用(Chaning)&lt;/em&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;promise&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fecthCurrentUser&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;api/user&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;promise&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchFollowerSByUserId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/followers/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchFollowerInterests&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/interests/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;interstId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//持續直到取得需要的資源....
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    .&lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt;(&lt;span style=&#34;color:#75715e&#34;&gt;/*rejected 處理*/&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用promise可以很好的避免callback Hell，並且方便程式開發者撰寫Error Handling。&lt;/p&gt;
&lt;p&gt;除此之外promise還提供一些實用method 如 &lt;code&gt;Promise.all( )&lt;/code&gt; , &lt;code&gt;Promise.allSettled( )&lt;/code&gt;, &lt;code&gt;Promise.race()&lt;/code&gt; 來滿足現今網頁各種複雜的request。&lt;/p&gt;
&lt;p&gt;關於Promise的內容可以寫好幾篇文章了，對於初學非同步程式的新手一次接觸這麼多的概念會需要不少時間消化，幸好當初在自學Flutter 框架的過程中就先接觸並且學習類似的觀念(在Dart 語言中叫做Future)，以至於我現在學習起還能應付得過來。關於非同步程式的學習筆記之後有空會再統整成新的文章來發表。&lt;/p&gt;
&lt;h4 id=&#34;asyncawait&#34;&gt;async/await&lt;/h4&gt;
&lt;p&gt;有了Promise的概念後，接者就要提到async/await。
用async關鍵字定義的function 會成為async function，其用意是使得function的回傳值為Promise；
而await關鍵字則能讓程式等待 async functoin 的 return 結果。&lt;/p&gt;
&lt;p&gt;在這兩個關鍵字的搭配下就能&lt;strong&gt;用synchronous code的寫法來撰寫asynchronous code&lt;/strong&gt;，來看以下範例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchData&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchCurrentUser&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/user`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;followers&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchFollowersByUserId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/followers/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;userId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;interests&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchFollowerInterests&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`api/interests/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;followerId&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//持續直到取得需要的資源....
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這樣的方法使得撰寫程式可以更直觀，並且可以直接套用try&amp;hellip;catch() 來做例外處理。&lt;/p&gt;
&lt;h3 id=&#34;其他學習&#34;&gt;其他學習&lt;/h3&gt;
&lt;p&gt;再有了上述提到各種基本概念後再去觀看Fetch API 的教學影片比較容易上手，因為涉及 JSON、Object、asynchronous等主題。不過我目前對於Fetch API 的了解僅止於 HTTP request ，詳細的應用還有待進一步學習。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;h3 id=&#34;撰寫文字&#34;&gt;撰寫文字&lt;/h3&gt;
&lt;p&gt;我發現若在學習的過程中沒有主動做筆記，再撰寫文章的當下要寫出學習的總結整理還滿困難的。&lt;/p&gt;
&lt;p&gt;再撰寫的過程還要重新打開已經看過的文章or影片複習，這與我理想中的寫作有點出入。以往的想法都是學習完成後便可以順利的寫下總結文章，然而事實卻是: &lt;strong&gt;邊review，邊想總結，邊寫下文字&lt;/strong&gt;，這樣做花費了大量的時間。&lt;/p&gt;
&lt;p&gt;在&lt;em&gt;&lt;strong&gt;卡片盒筆記&lt;/strong&gt;&lt;/em&gt; 這本書中有提到，理想的寫作過程應該為學習的當下就在做統整筆記並與其他的知識做一個連結。而產出文章的方法為整理總結好的文字組合成段落&amp;amp;文章，換句話說，最後的步驟反而是最簡單的。若依據傳統的寫作方法從空白的紙張開始寫，會花上不少時間。&lt;del&gt;這篇文章的內容大概花了我超過五小時&lt;/del&gt;&lt;br&gt;
不過我也還在嘗試新的產出方法，期望自己在學習之於也能產出高品質的文章給他人看。&lt;/p&gt;
&lt;h3 id=&#34;持續學習&#34;&gt;持續學習&lt;/h3&gt;
&lt;p&gt;這篇紀錄的概念只佔前端工程的冰山一角，當真正投入心力學習就會發現涉及到的技術很廣，並且水很深。唯有持續不斷的學習才能在快速變化的前端工程領域不被淘汰。目前打算將更詳細的技術筆記單獨拉出來成為新的系列文章，這系列就專注在自己每周前端學習總結這樣。&lt;/p&gt;
&lt;p&gt;那第二周的學習內容總結就到這邊，擱置的第三周文章我會盡快補齊(大概?)。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第一周-前端學習首月&amp;意外插曲</title>
        <link>https://victorchao996.github.io/p/frontend_learning-first-week/</link>
        <pubDate>Sun, 04 Dec 2022 18:00:00 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-first-week/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-first-week/appworks_school.png" alt="Featured image of post 第一周-前端學習首月&amp;意外插曲" /&gt;&lt;p&gt;封面圖片來源: &lt;a class=&#34;link&#34; href=&#34;https://appworks.tw/appworks-school-ios-class-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://appworks.tw/appworks-school-ios-class-1/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在大四上最重要的活動- 研究所推甄落榜 後，就正式宣告我與本校的資工所無緣。而研究所考試入學的管道則是相對競爭(以去年為例: 中央大學資工所收30多人，而報考人數為1300多)，暑假的備考過程大概就是: 每日學習無法應用的死知識，學了又忘，忘了再學。反反覆覆下，&lt;strong&gt;我更加確信這條路，我既不擅長也不想走，於是我在開學就放棄準備明年2月的考試&lt;/strong&gt;。關於面對未來出路的焦慮有太多可以談了，以後會找時間單獨寫一篇文。&lt;/p&gt;
&lt;p&gt;因為不想要畢業就失業，於是狠下心來認真學習前端技術，也因此可以開啟前端學習之路的挑戰。&lt;/p&gt;
&lt;h2 id=&#34;新的接觸&#34;&gt;新的接觸&lt;/h2&gt;
&lt;p&gt;在一個多月前我心血來潮想說透過Youtube上的影片自學，想著至少先理解前端技術是怎麼回事，因為我當時對前端的理解僅止於HTML、CSS、JavaScript、網站開發等名詞上。於是我找了由freeCodeCamp.org這個頻道中的前端開發入門課程:
&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=zJSY8tbf_ys&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Frontend Web Development Bootcamp Course (JavaScript, HTML, CSS) - YouTube&lt;/a&gt;
題外話: 很推這個組織，這是一個非營利組織，使命是讓大家免費學習coding。官方Youtube頻道上有各種程式語言、電腦科學相關的優質影片都是免費開放讓大家來觀看。&lt;/p&gt;
&lt;p&gt;在這個影片中我學習到幾個重點:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML是網架的骨架，CSS是網頁的裝飾，而JavaScript則是網頁的功能&lt;/li&gt;
&lt;li&gt;HTML 的各個基礎tag&lt;/li&gt;
&lt;li&gt;CSS 的selector 優先度、常用property、Box Model概念&lt;/li&gt;
&lt;li&gt;JavaScript 基礎&amp;amp; DOM(Document Object Model)&lt;/li&gt;
&lt;li&gt;RWD(responsive web design)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而在影片的後段也跟著老師練習&lt;a class=&#34;link&#34; href=&#34;https://www.frontendmentor.io/home&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Frontend Mentor | Front-end coding challenges using a real-life workflow&lt;/a&gt;  上的入門Challenge。在練習得過程中我終於理解為何前端工程師是轉職者的首選，除了網路上學習資源多外，最重要的是很&lt;strong&gt;容易獲得成就感&lt;/strong&gt;，畢竟手刻出一個畫面比寫出一個演算法題目還來的有成就感對吧?&lt;/p&gt;
&lt;h2 id=&#34;進一步了解&#34;&gt;進一步了解&lt;/h2&gt;
&lt;p&gt;上述入門影片算是一窺前端的基礎技術，但我清楚明白就算把這個&lt;strong&gt;網頁三本柱HTML、CSS、JavaScript&lt;/strong&gt;學到精熟也一定有完成不了的事情。有趣的一點是: 這個blog網站就是在我連三本柱都不認識的情況下使用Hugo (Static Site Generators)建立起來的。&lt;/p&gt;
&lt;p&gt;於是我像往常一樣上網搜尋: 「Front-end  developer roadmap」，最終我找到這個OpenSource: &lt;a class=&#34;link&#34; href=&#34;https://roadmap.sh/frontend&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Frontend Developer Roadmap: Learn to become a modern frontend developer&lt;/a&gt;  。
沒看還好，一看就發現一堆未曾聽聞過的技術名詞，尤其是各種相關&lt;strong&gt;框架&lt;/strong&gt;看得令人眼花撩亂。
例如這張表上各種因為實務開發上需要而產生的技術:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS Library/ Framework: React、Angular、Vue.js&lt;/li&gt;
&lt;li&gt;CSS Framework: Bootstrap、Tailwind&lt;/li&gt;
&lt;li&gt;Testing tool: Jest&lt;/li&gt;
&lt;li&gt;Build tools: Lisnters and Formatters、Task Runners、Module Bundlers&lt;/li&gt;
&lt;li&gt;Version Control Systems &amp;amp; Repo hosting Services: Git、GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我強力推薦所有要學習技術的夥伴，在朝任一技術方向深入之前都應該要看過由專業人員所建立的&lt;strong&gt;學習路線(learning roadmap)&lt;/strong&gt;。因為學習路線除了做為學習引導外，也可以建立&amp;quot;大局觀&amp;quot;，避免把時間投入在 &lt;strong&gt;「自以為很重要的事情上」&lt;/strong&gt;。若沒有上網查找這個roadmap，我可能到現在還在為自己建立的單頁內容(甚至不能稱得上是網站)沾沾自喜呢，很慶幸我並沒有這樣做。&lt;/p&gt;
&lt;h2 id=&#34;意外插曲&#34;&gt;意外插曲&lt;/h2&gt;
&lt;p&gt;本周偶然間得知AppWorks School 開放大三屆校園培訓計畫(也許是臉書廣告?)、系上的粉絲專頁也分享這個培訓計畫，再加上平常關注的podcast 頻道 &amp;ldquo;程人頻道&amp;rdquo; 的最新一集也邀請&lt;strong&gt;校長Shirney分享AppWorks School的理念&lt;/strong&gt;，總總的跡象都像是再提醒我不能錯過這麼好的機會。&lt;/p&gt;
&lt;p&gt;以前就有關注到AppWorks，不過印象中都是針對有&lt;strong&gt;轉職需求&lt;/strong&gt;的學員來做培訓。沒想到今年有針對本科系學生的培訓。在聽完Podcast節目，並做了十足的資料收集後，我發現這就是我想要的，學校給不了的 &lt;strong&gt;&amp;ldquo;團隊實務開發經驗&amp;rdquo;&lt;/strong&gt; ，於是我直接手刀報名。&lt;/p&gt;
&lt;p&gt;在送出報名表單的隔天就收到面談的邀約，下周星期五將會成為我&lt;strong&gt;人生中第一場正式面試&lt;/strong&gt;，特別緊張😟。這麼豐沛的資源再加上金額免費，報名參加的人肯定很多，但我也明白，&lt;strong&gt;擺在眼前的機會若不盡力去爭取，未來的我肯定會後悔&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本周的課外時間最主要就是把課程大綱上的相關技術都看過一遍，在這邊特別推薦一個Youtube頻道&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/@Fireship&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Fireship - YouTube&lt;/a&gt;  ，頻道中的100 seconds系列可以帶新手快速認識一項技術or程式語言的歷史&amp;amp;應用。 另外也推薦這個影片 &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=Sxxw3qtb3_g&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to OVER Engineer a Website // What is a Tech Stack? - YouTube&lt;/a&gt;  在這影片中介紹建立一個網站需要選擇Tech Stack，提供了前後端技術選擇的思路，對於學習者來說可以理解為何建立網站會涉及到這麼多的技術。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;瘋狂的一周! 從&lt;strong&gt;相關資料的收集、準備報名資料、理解課程大綱的技術，與家人的討論&lt;/strong&gt;等。在這事情都是一個月前還身陷在情緒低谷中的我無法想像的，但在研究、準備的過程中我確實感覺自己比較沒有這麼憂慮了，也感覺到自己的身心有在成長。很感謝AppWorks School的活動讓我知道，自己還有很多不足之處，學習都來不及了，可沒有時間繼續悲傷下去😂。&lt;/p&gt;
&lt;p&gt;無論最終結果如何，我都心懷感激之情，謝謝這兩周努力準備的我，我學到很多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>前端學習之路-旅程開始</title>
        <link>https://victorchao996.github.io/p/frontend_learning-journey-begin/</link>
        <pubDate>Sun, 27 Nov 2022 18:36:00 +0800</pubDate>
        
        <guid>https://victorchao996.github.io/p/frontend_learning-journey-begin/</guid>
        <description>&lt;img src="https://victorchao996.github.io/p/frontend_learning-journey-begin/path.jpg" alt="Featured image of post 前端學習之路-旅程開始" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;這一篇文是前端學習之路的開篇，最近這段時間被升學的事情搞得焦頭爛額，目前算是告一段落。面對比以往都還要嚴重的低潮期，希望自己可以找一點事情做並且順便轉移自己的注意力。&lt;/p&gt;
&lt;h2 id=&#34;自學回顧&#34;&gt;自學回顧&lt;/h2&gt;
&lt;p&gt;回顧大學前三年課外自學的技術，無論是製作遊戲用的Unity，Android 平台app開發，甚至是跨平台框架flutter都有畫面製作的部分。我發現自己投入最多時間的項目都是介面開發，&lt;strong&gt;比起程式邏輯、數據儲存、資料庫操作，我更喜歡畫面的呈現&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在製作遊戲時我花了不少時間在UI介面的擺放、虛擬鏡頭的移動、動畫上，而在app開發上介面也是我花最多時間琢磨的。從Unity的UI系統中我學到不少觀念，如:&lt;strong&gt;Anchor、縮放、不同resolution&lt;/strong&gt;等；而在app開發上則是學到: &lt;strong&gt;設定基準的位置(start, end, top, bottom)、Margin&amp;amp;Padding、Material Design&lt;/strong&gt;等觀念。&lt;/p&gt;
&lt;p&gt;先前對於前端有著不少的誤解，再加上各種巧合(諸如系上沒有相關課程)，所以沒有實際探索過前端工程這方面的知識。但在經過這兩三周的學習後我才發現，在UI介面開發上的設定都有著異曲同工之妙，或者反過來說，這些UI設計的邏輯設定多少都有受到網頁設計上style 設定的影響。在學習CSS的過程也有種倒吃甘蔗的感覺，見過不同的使用情況對於理解CSS的各項prperty有顯著的幫助。&lt;/p&gt;
&lt;p&gt;舉例來說: CSS flexbox 中的 justify-content 或 align-items 設定就會讓我想到 flutter 框架中 widget 中的命名參數MainAxisAlignment 或 CrossAxisAlignment。而 flutter 的命名&amp;amp;設定相對來說較為直觀，因為可以立即看出設定的是主軸(main axis)還是切軸(cross axis)。&lt;/p&gt;
&lt;h2 id=&#34;新的學習之路&#34;&gt;新的學習之路&lt;/h2&gt;
&lt;p&gt;為了鞭策自己可以學好前端的相關的技術，我給自己的目標是&lt;strong&gt;每周至少發布一篇學習的總結文&lt;/strong&gt;。內容不限技術、經驗談、或實作開發紀錄。希望能在記錄之餘，還可以檢驗自己是否真的有學到新的知識，避免陷入有在持續成長的謊言中。&lt;/p&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結&lt;/h2&gt;
&lt;p&gt;這學期修的課程比較少，期許自己不要把時間浪費在一些不會讓自己增長的娛樂上，所以給自己設下這樣的挑戰，就把這挑戰當作是一個比較輕鬆的鐵人賽吧。&lt;/p&gt;
&lt;h2 id=&#34;補充202311&#34;&gt;補充(2023/1/1)&lt;/h2&gt;
&lt;p&gt;我發現對於不常撰寫文字的我來說要每周發布一篇技術文章真的偏困難，尤其是當學校還有其他課程需要忙得時候。有時可能沒辦法一直發布學習的文章，所以偶爾會中斷個一周這樣(或者是發布其他分類的文章)。儘管日期可能對不上，不過我文章的title會接續下去。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
